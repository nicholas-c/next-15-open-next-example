"use strict";function _export(e,o){for(var r in o)Object.defineProperty(e,r,{enumerable:!0,get:o[r]})}Object.defineProperty(exports,"__esModule",{value:!0}),_export(exports,{MiddlewareConfigInputSchema:function(){return MiddlewareConfigInputSchema},MiddlewareConfigInputSchemaKeys:function(){return MiddlewareConfigInputSchemaKeys},SourceSchema:function(){return SourceSchema}});const _picomatch=_interop_require_default(require("next/dist/compiled/picomatch")),_zod=require("next/dist/compiled/zod"),_trytoparsepath=require("../../../lib/try-to-parse-path");function _interop_require_default(e){return e&&e.__esModule?e:{default:e}}const RouteHasSchema=_zod.z.discriminatedUnion("type",[_zod.z.object({type:_zod.z.enum(["header","query","cookie"]),key:_zod.z.string({required_error:"key is required when type is header, query or cookie"}),value:_zod.z.string({invalid_type_error:"value must be a string"}).optional()}).strict(),_zod.z.object({type:_zod.z.literal("host"),value:_zod.z.string({required_error:"host must have a value"})}).strict()]),SourceSchema=_zod.z.string({required_error:"source is required"}).max(4096,"exceeds max built length of 4096 for route").superRefine(((e,o)=>{if(!e.startsWith("/"))return o.addIssue({code:_zod.z.ZodIssueCode.custom,message:"source must start with /"});const{error:r,regexStr:t}=(0,_trytoparsepath.tryToParsePath)(e);!r&&t||o.addIssue({code:_zod.z.ZodIssueCode.custom,message:`Invalid source '${e}': ${r.message}`})})),MiddlewareMatcherInputSchema=_zod.z.object({locale:_zod.z.union([_zod.z.literal(!1),_zod.z.undefined()]).optional(),has:_zod.z.array(RouteHasSchema).optional(),missing:_zod.z.array(RouteHasSchema).optional(),source:SourceSchema}).strict(),MiddlewareConfigMatcherInputSchema=_zod.z.union([SourceSchema,_zod.z.array(_zod.z.union([SourceSchema,MiddlewareMatcherInputSchema],{invalid_type_error:"must be an array of strings or middleware matchers"}))]),GlobSchema=_zod.z.string().superRefine(((e,o)=>{try{(0,_picomatch.default)(e)}catch(r){o.addIssue({code:_zod.z.ZodIssueCode.custom,message:`Invalid glob pattern '${e}': ${r.message}`})}})),MiddlewareConfigInputSchema=_zod.z.object({matcher:MiddlewareConfigMatcherInputSchema.optional(),regions:_zod.z.union([_zod.z.string(),_zod.z.array(_zod.z.string())]).optional(),unstable_allowDynamic:_zod.z.union([GlobSchema,_zod.z.array(GlobSchema)]).optional()}),MiddlewareConfigInputSchemaKeys=MiddlewareConfigInputSchema.keyof().options;