"use strict";function _export(e,r){for(var o in r)Object.defineProperty(e,o,{enumerable:!0,get:r[o]})}Object.defineProperty(exports,"__esModule",{value:!0}),_export(exports,{getImageError:function(){return getImageError},getNotFoundError:function(){return getNotFoundError}});const _picocolors=require("../../../../lib/picocolors"),_simpleWebpackError=require("./simpleWebpackError"),_middlewarewebpack=require("../../../../client/components/react-dev-overlay/server/middleware-webpack");function getModuleTrace(e,r){const o=new Set,t=[];let n=e.module;for(;n&&!o.has(n);){o.add(n);const e=r.moduleGraph.getIssuer(n);if(!e)break;t.push({origin:e,module:n}),n=e}return t}async function getSourceFrame(e,r,o){try{const i=e.loc||e.dependencies.map((e=>e.loc)).filter(Boolean)[0],c=e.module,u=c.originalSource(),s=(null==u?void 0:u.map())??void 0;if(s){var t,n,l,a;const e=o.chunkGraph.getModuleId(c),u=await(0,_middlewarewebpack.createOriginalStackFrame)({source:{type:"bundle",sourceMap:s,ignoredSources:(0,_middlewarewebpack.getIgnoredSources)(s),compilation:o,moduleId:e,moduleURL:r},rootDirectory:o.options.context,frame:{arguments:[],file:r,methodName:"",lineNumber:i.start.line,column:(i.start.column??0)+1}});return{frame:(null==u?void 0:u.originalCodeFrame)??"",lineNumber:(null==u||null==(n=u.originalStackFrame)||null==(t=n.lineNumber)?void 0:t.toString())??"",column:(null==u||null==(a=u.originalStackFrame)||null==(l=a.column)?void 0:l.toString())??""}}}catch{}return{frame:"",lineNumber:"",column:""}}function getFormattedFileName(e,r,o,t){var n;if(null==(n=r.loaders)?void 0:n.find((e=>/next-font-loader[/\\]index.js/.test(e.loader))))return JSON.parse(r.resourceResolveData.query.slice(1)).path;{let r=(0,_picocolors.cyan)(e);return o&&t&&(r+=`:${(0,_picocolors.yellow)(o)}:${(0,_picocolors.yellow)(t)}`),r}}async function getNotFoundError(e,r,o,t){if("ModuleNotFoundError"!==r.name&&("ModuleBuildError"!==r.name||!/Error: Can't resolve '.+' in /.test(r.message)))return!1;try{const{frame:n,lineNumber:l,column:a}=await getSourceFrame(r,o,e),i=r.error.message.replace(/ in '.*?'/,"").replace(/Can't resolve '(.*)'/,`Can't resolve '${(0,_picocolors.green)("$1")}'`),c=()=>{const o=getModuleTrace(r,e).map((({origin:r})=>r.readableIdentifier(e.requestShortener))).filter((e=>e&&!/next-(app|middleware|client-pages|route|flight-(client|server|client-entry))-loader/.test(e)&&!/css-loader.+\.js/.test(e)));return 0===o.length?"":`\nImport trace for requested module:\n${o.join("\n")}`};let u=(0,_picocolors.red)((0,_picocolors.bold)("Module not found"))+`: ${i}\n`+n+(""!==n?"\n":"")+"\nhttps://nextjs.org/docs/messages/module-not-found\n"+c();const s=getFormattedFileName(o,t,l,a);return new _simpleWebpackError.SimpleWebpackError(s,u)}catch(e){return r}}async function getImageError(e,r,o){if("InvalidImageFormatError"!==o.name)return!1;const t=getModuleTrace(r,e),{origin:n,module:l}=t[0]||{};if(!n||!l)return!1;const a=n.rawRequest.replace(/^private-next-pages/,"./pages"),i=l.rawRequest,c=n.originalSource().buffer().toString("utf8");let u=-1;return c.split("\n").some((e=>(u++,e.includes(i)))),new _simpleWebpackError.SimpleWebpackError(`${(0,_picocolors.cyan)(a)}:${(0,_picocolors.yellow)(u.toString())}`,(0,_picocolors.red)((0,_picocolors.bold)("Error")).concat(`: Image import "${i}" is not a valid image file. The image may be corrupted or an unsupported format.`))}