"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"CssMinimizerPlugin",{enumerable:!0,get:function(){return CssMinimizerPlugin}});const _cssnanosimple=_interop_require_default(require("next/dist/compiled/cssnano-simple")),_postcssscss=_interop_require_default(require("next/dist/compiled/postcss-scss")),_postcss=_interop_require_default(require("postcss")),_webpack=require("next/dist/compiled/webpack/webpack"),_profilingplugin=require("./profiling-plugin");function _interop_require_default(s){return s&&s.__esModule?s:{default:s}}const CSS_REGEX=/\.css(\?.*)?$/i;class CssMinimizerPlugin{constructor(s){this.__next_css_remove=!0,this.options=s}optimizeAsset(s,e){const t={...this.options.postcssOptions,to:s,from:s,parser:_postcssscss.default};let i;if(t.map&&e.sourceAndMap){const{source:s,map:r}=e.sourceAndMap();i=s,t.map.prev=r||!1}else i=e.source();return(0,_postcss.default)([(0,_cssnanosimple.default)({colormin:!1},_postcss.default)]).process(i,t).then((e=>e.map?new _webpack.sources.SourceMapSource(e.css,s,e.map.toJSON()):new _webpack.sources.RawSource(e.css)))}apply(s){s.hooks.compilation.tap("CssMinimizerPlugin",(e=>{const t=e.getCache("CssMinimizerPlugin");e.hooks.processAssets.tapPromise({name:"CssMinimizerPlugin",stage:_webpack.webpack.Compilation.PROCESS_ASSETS_STAGE_OPTIMIZE_SIZE},(async i=>{const r=(_profilingplugin.spans.get(e)||_profilingplugin.spans.get(s)).traceChild("css-minimizer-plugin");return r.traceAsyncFn((async()=>{const s=Object.keys(i);await Promise.all(s.filter((s=>CSS_REGEX.test(s))).map((async s=>{const i=r.traceChild("minify-css");return i.setAttribute("file",s),i.traceAsyncFn((async()=>{const r=e.getAsset(s).source,n=t.getLazyHashedEtag(r),o=await t.getPromise(s,n);if(i.setAttribute("cache",o?"HIT":"MISS"),o)return void e.updateAsset(s,o);const c=await this.optimizeAsset(s,r);await t.storePromise(s,n,c),e.updateAsset(s,c)}))})))}))}))}))}}