"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"getPostCssPlugins",{enumerable:!0,get:function(){return getPostCssPlugins}});const _picocolors=require("../../../../../lib/picocolors"),_findconfig=require("../../../../../lib/find-config"),genericErrorText="Malformed PostCSS Configuration";function getError_NullConfig(o){return`${(0,_picocolors.red)((0,_picocolors.bold)("Error"))}: Your PostCSS configuration for '${o}' cannot have ${(0,_picocolors.bold)("null")} configuration.\nTo disable '${o}', pass ${(0,_picocolors.bold)("false")}, otherwise, pass ${(0,_picocolors.bold)("true")} or a configuration object.`}function isIgnoredPlugin(o){const e=/(?:^|[\\/])(postcss-modules-values|postcss-modules-scope|postcss-modules-extract-imports|postcss-modules-local-by-default|postcss-modules)(?:[\\/]|$)/i.exec(o);if(null==e)return!1;const r=e.pop();return console.warn(`${(0,_picocolors.yellow)((0,_picocolors.bold)("Warning"))}: Please remove the ${(0,_picocolors.underline)(r)} plugin from your PostCSS configuration. This plugin is automatically configured by Next.js.\nRead more: https://nextjs.org/docs/messages/postcss-ignored-plugin`),!0}const createLazyPostCssPlugin=o=>{let e;const r=(...r)=>(void 0===e&&(e=o()),!0===e.postcss?e(...r):e.postcss?e.postcss:e);return r.postcss=!0,r};async function loadPlugin(o,e,r){if(!1===r||isIgnoredPlugin(e))return!1;if(null==r)throw console.error(getError_NullConfig(e)),Object.defineProperty(new Error(genericErrorText),"__NEXT_ERROR_CODE",{value:"E394",enumerable:!1,configurable:!0});const s=require.resolve(e,{paths:[o]});return!isIgnoredPlugin(s)&&(!0===r||"object"==typeof r&&0===Object.keys(r).length?createLazyPostCssPlugin((()=>require(s))):createLazyPostCssPlugin((()=>require(s)(r))))}function getDefaultPlugins(o,e){return[require.resolve("next/dist/compiled/postcss-flexbugs-fixes"),!e&&[require.resolve("next/dist/compiled/postcss-preset-env"),{browsers:o??["defaults"],autoprefixer:{flexbox:"no-2009"},stage:3,features:{"custom-properties":!1}}]].filter(Boolean)}async function getPostCssPlugins(o,e,r=!1,s=!1){let t=await(0,_findconfig.findConfig)(o,"postcss");if(null==t&&(t={plugins:s?[]:getDefaultPlugins(e,r)}),"function"==typeof t)throw Object.defineProperty(new Error("Your custom PostCSS configuration may not export a function. Please export a plain object instead.\nRead more: https://nextjs.org/docs/messages/postcss-function"),"__NEXT_ERROR_CODE",{value:"E323",enumerable:!1,configurable:!0});const n=Object.keys(t).find((o=>"plugins"!==o));n&&console.warn(`${(0,_picocolors.yellow)((0,_picocolors.bold)("Warning"))}: Your PostCSS configuration defines a field which is not supported (\`${n}\`). Please remove this configuration value.`);let i=t.plugins;if(null==i||"object"!=typeof i)throw Object.defineProperty(new Error("Your custom PostCSS configuration must export a `plugins` key."),"__NEXT_ERROR_CODE",{value:"E347",enumerable:!1,configurable:!0});if(!Array.isArray(i)){const o=i;i=Object.keys(i).reduce(((e,r)=>{const s=o[r];if(void 0===s)throw console.error(getError_NullConfig(r)),Object.defineProperty(new Error(genericErrorText),"__NEXT_ERROR_CODE",{value:"E394",enumerable:!1,configurable:!0});return e.push([r,s]),e}),[])}const l=[];i.forEach((o=>{if(null==o)console.warn(`${(0,_picocolors.yellow)((0,_picocolors.bold)("Warning"))}: A ${(0,_picocolors.bold)("null")} PostCSS plugin was provided. This entry will be ignored.`);else if("string"==typeof o)l.push([o,!0]);else{if(!Array.isArray(o))throw"function"==typeof o?(console.error(`${(0,_picocolors.red)((0,_picocolors.bold)("Error"))}: A PostCSS Plugin was passed as a function using require(), but it must be provided as a ${(0,_picocolors.bold)("string")}.\nRead more: https://nextjs.org/docs/messages/postcss-shape`),Object.defineProperty(new Error(genericErrorText),"__NEXT_ERROR_CODE",{value:"E394",enumerable:!1,configurable:!0})):(console.error(`${(0,_picocolors.red)((0,_picocolors.bold)("Error"))}: An unknown PostCSS plugin was provided (${o}).\nRead more: https://nextjs.org/docs/messages/postcss-shape`),Object.defineProperty(new Error(genericErrorText),"__NEXT_ERROR_CODE",{value:"E394",enumerable:!1,configurable:!0}));{const e=o[0],r=o[1];if("string"!=typeof e||"boolean"!=typeof r&&"object"!=typeof r&&"string"!=typeof r)throw"string"!=typeof e?console.error(`${(0,_picocolors.red)((0,_picocolors.bold)("Error"))}: A PostCSS Plugin must be provided as a ${(0,_picocolors.bold)("string")}. Instead, we got: '${e}'.\nRead more: https://nextjs.org/docs/messages/postcss-shape`):console.error(`${(0,_picocolors.red)((0,_picocolors.bold)("Error"))}: A PostCSS Plugin was passed as an array but did not provide its configuration ('${e}').\nRead more: https://nextjs.org/docs/messages/postcss-shape`),Object.defineProperty(new Error(genericErrorText),"__NEXT_ERROR_CODE",{value:"E394",enumerable:!1,configurable:!0});l.push([e,r])}}}));return(await Promise.all(l.map((e=>loadPlugin(o,e[0],e[1]))))).filter(Boolean)}