"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"default",{enumerable:!0,get:function(){return EvalSourceMapDevToolPlugin}});const _webpack=require("next/dist/compiled/webpack/webpack"),cache=new WeakMap,devtoolWarningMessage='/*\n * ATTENTION: An "eval-source-map" devtool has been used.\n * This devtool is neither made for production nor for readable output files.\n * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with "devtool: false".\n * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).\n */\n';class EvalSourceMapDevToolPlugin{constructor(e){let o;o="string"==typeof e?{append:e}:e,this.sourceMapComment=o.append&&"function"!=typeof o.append?o.append:"//# sourceURL=[module]\n//# sourceMappingURL=[url]",this.moduleFilenameTemplate=o.moduleFilenameTemplate||"webpack://[namespace]/[resource-path]?[hash]",this.namespace=o.namespace||"",this.options=o,this.shouldIgnorePath=o.shouldIgnorePath??(()=>!1)}apply(e){const o=this.options;e.hooks.compilation.tap("NextJSEvalSourceMapDevToolPlugin",(t=>{const{JavascriptModulesPlugin:a}=e.webpack.javascript,{RawSource:n,ConcatSource:r}=e.webpack.sources,s=new n(devtoolWarningMessage),u=a.getCompilationHooks(t);new _webpack.SourceMapDevToolModuleOptionsPlugin(o).apply(t);const l=_webpack.ModuleFilenameHelpers.matchObject.bind(_webpack.ModuleFilenameHelpers,o);u.renderModuleContent.tap("NextJSEvalSourceMapDevToolPlugin",((a,r,{chunk:s,runtimeTemplate:u,chunkGraph:c})=>{const i=cache.get(a);if(void 0!==i)return i;const p=e=>(cache.set(a,e),e);if(r instanceof _webpack.NormalModule){if(!l(r.resource))return p(a)}else{if(!(r instanceof _webpack.ConcatenatedModule))return p(a);{const e=r;if(!(e.rootModule instanceof _webpack.NormalModule))return p(a);{const o=e.rootModule;if(!l(o.resource))return p(a)}}}const d=t.getPath(this.namespace,{chunk:s});let h,m;if(a.sourceAndMap){const e=a.sourceAndMap(o);h=e.map,m=e.source}else h=a.map(o),m=a.source();if(!h)return p(a);h={...h};const f=e.options.context,g=e.root;let v=h.sources.map((e=>{if(!e.startsWith("webpack://"))return e;e=(0,_webpack.makePathsAbsolute)(f,e.slice(10),g);return t.findModule(e)||e})).map((e=>_webpack.ModuleFilenameHelpers.createFilename(e,{moduleFilenameTemplate:this.moduleFilenameTemplate,namespace:d},{requestShortener:u.requestShortener,chunkGraph:c,hashFunction:t.outputOptions.hashFunction})));v=_webpack.ModuleFilenameHelpers.replaceDuplicates(v,((e,o,t)=>{for(let o=0;o<t;o++)e+="*";return e})),h.sources=v,h.ignoreList=[];for(let e=0;e<v.length;e++)this.shouldIgnorePath(v[e])&&h.ignoreList.push(e);o.noSources&&(h.sourcesContent=void 0),h.sourceRoot=o.sourceRoot||"";const b=c.getModuleId(r);b&&(h.file="number"==typeof b?`${b}.js`:b);const M=`${this.sourceMapComment.replace(/\[url\]/g,`data:application/json;charset=utf-8;base64,${Buffer.from(JSON.stringify(h),"utf8").toString("base64")}`)}\n//# sourceURL=webpack-internal:///${b}\n`;return p(new n(`eval(${t.outputOptions.trustedTypes?`${_webpack.RuntimeGlobals.createScript}(${JSON.stringify(m+M)})`:JSON.stringify(m+M)});`))})),u.inlineInRuntimeBailout.tap("EvalDevToolModulePlugin",(()=>"the eval-source-map devtool is used.")),u.render.tap("EvalSourceMapDevToolPlugin",(e=>new r(s,e))),u.chunkHash.tap("EvalSourceMapDevToolPlugin",((e,o)=>{o.update("EvalSourceMapDevToolPlugin"),o.update("2")})),t.outputOptions.trustedTypes&&t.hooks.additionalModuleRuntimeRequirements.tap("EvalSourceMapDevToolPlugin",((e,o,t)=>{o.add(_webpack.RuntimeGlobals.createScript)}))}))}}