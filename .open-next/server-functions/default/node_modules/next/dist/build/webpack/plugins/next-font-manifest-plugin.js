"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"NextFontManifestPlugin",{enumerable:!0,get:function(){return NextFontManifestPlugin}});const _webpack=require("next/dist/compiled/webpack/webpack"),_getroutefromentrypoint=_interop_require_default(require("../../../server/get-route-from-entrypoint")),_constants=require("../../../shared/lib/constants"),_utils=require("../utils"),_path=_interop_require_default(require("path"));function _interop_require_default(e){return e&&e.__esModule?e:{default:e}}const PLUGIN_NAME="NextFontManifestPlugin";function getPreloadedFontFiles(e){return e.filter((e=>/\.p\.(woff|woff2|eot|ttf|otf)$/.test(e)))}function getPageIsUsingSizeAdjust(e){return e.some((e=>e.includes("-s")))}class NextFontManifestPlugin{constructor(e){this.appDir=e.appDir}apply(e){e.hooks.make.tap(PLUGIN_NAME,(e=>{e.hooks.processAssets.tap({name:PLUGIN_NAME,stage:_webpack.webpack.Compilation.PROCESS_ASSETS_STAGE_ADDITIONS},(()=>{const t={pages:{},app:{},appUsingSizeAdjust:!1,pagesUsingSizeAdjust:!1};if(this.appDir){const s=_path.default.dirname(this.appDir)+_path.default.sep;(0,_utils.traverseModules)(e,((e,n,i)=>{var o;if(null==e||null==(o=e.request)?void 0:o.includes("/next-font-loader/index.js?")){var r;if(!(null==(r=e.buildInfo)?void 0:r.assets))return;const n=(s+i.name).replace(/[\\/]/g,_path.default.sep),o=Object.keys(e.buildInfo.assets).filter((e=>/\.(woff|woff2|eot|ttf|otf)$/.test(e)));t.appUsingSizeAdjust||(t.appUsingSizeAdjust=getPageIsUsingSizeAdjust(o));const a=getPreloadedFontFiles(o);o.length>0&&(t.app[n]||(t.app[n]=[]),t.app[n].push(...a))}}),(e=>{var t;return!!(null==(t=e.name)?void 0:t.startsWith("app/"))}))}for(const s of e.entrypoints.values()){const e=(0,_getroutefromentrypoint.default)(s.name);if(!e)continue;const n=s.chunks.flatMap((e=>[...e.auxiliaryFiles])).filter((e=>/\.(woff|woff2|eot|ttf|otf)$/.test(e)));t.pagesUsingSizeAdjust||(t.pagesUsingSizeAdjust=getPageIsUsingSizeAdjust(n));const i=getPreloadedFontFiles(n);n.length>0&&(t.pages[e]=i)}const s=JSON.stringify(t,null);e.emitAsset(`server/${_constants.NEXT_FONT_MANIFEST}.js`,new _webpack.sources.RawSource(`self.__NEXT_FONT_MANIFEST=${JSON.stringify(s)}`)),e.emitAsset(`server/${_constants.NEXT_FONT_MANIFEST}.json`,new _webpack.sources.RawSource(s))}))}))}}