"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"CssChunkingPlugin",{enumerable:!0,get:function(){return CssChunkingPlugin}});const PLUGIN_NAME="CssChunkingPlugin",MIN_CSS_CHUNK_SIZE=30720,MAX_CSS_CHUNK_SIZE=102400;function isGlobalCss(s){return!/\.module\.(css|scss|sass)$/.test(s.nameForCondition()||"")}class CssChunkingPlugin{constructor(s){this.strict=s}apply(s){const t=this.strict,e=!!process.env.CSS_CHUNKING_SUMMARY;s.hooks.thisCompilation.tap(PLUGIN_NAME,(s=>{let o=!1;s.hooks.optimizeChunks.tap({name:PLUGIN_NAME,stage:5},(()=>{if(o)return;o=!0;const n=s.chunkGraph;let i;const c=new Map,u=new Map;for(const t of s.chunks){var f;if(null==(f=t.name)?void 0:f.startsWith("pages/"))continue;const s=[];for(const e of n.getChunkModulesIterable(t)){var r;(null==(r=e.type)?void 0:r.startsWith("css"))&&s.push(e)}if(!s.length)continue;const e={chunk:t,modules:s,order:0,requests:s.length};c.set(t,e);for(let t=0;t<s.length;t++){const o=s[t];let n=u.get(o);n||(n=new Map,u.set(o,n)),n.set(e,t),u.set(o,n)}}const l=[];for(const[s,t]of u){let e=0;for(const s of t.values())e+=s;l.push({module:s,sum:e})}l.sort(((s,t)=>s.sum-t.sum));const a=new Set(l.map((({module:s})=>s))),h=new Map;if(!this.strict)for(const s of a){const t=new Set;s:for(const e of a)if(e!==s){for(const[t,o]of u.get(e)){const e=u.get(s).get(t);if(void 0===e)continue s;if(e>o)continue s}t.add(e)}t.size>0&&h.set(s,t)}const d=new Map;for(const e of a){let o=isGlobalCss(e),c=new Map(u.get(e));const f=new Set([e]);let r=e.size();const l=new Map;for(const[s,t]of c){const e=s.modules[t+1];e&&a.has(e)&&l.set(e,[e.size(),u.get(e)])}let g;do{g=!1;const s=[];for(const[t,[e,o]]of l){let n=0;for(const s of o.keys())c.has(s)&&(n=Math.max(n,s.requests));s.push([t,e,o,n])}s.sort(((s,t)=>t[3]-s[3]||(s[0].identifier()<t[0].identifier()?-1:1)));s:for(const[e,n,i]of s){if(r+n>MAX_CSS_CHUNK_SIZE)continue;if(t)for(const[s,t]of i){const e=c.get(s);if(void 0===e){if(r<MIN_CSS_CHUNK_SIZE)continue;continue s}if(e+1!==t)continue s}else{const s=h.get(e);if(s)for(const t of s)if(f.has(t))continue s}const s=isGlobalCss(e);if(!s||!o||c.size===i.size){if(o)for(const s of i.keys())if(!c.has(s))continue s;if(s)for(const s of c.keys())if(!i.has(s))continue s;l.delete(e),r+=n,s&&(o=!0);for(const[s,t]of i){c.has(s)&&s.requests--,c.set(s,t);const e=s.modules[t+1];e&&a.has(e)&&!f.has(e)&&l.set(e,[e.size(),u.get(e)])}f.add(e),g=!0;break}}}while(g);const p=s.addChunk();p.preventIntegration=!0,p.idNameHints.add("css");for(const s of f)a.delete(s),n.connectChunkAndModule(p,s),d.set(s,p);i=!0}for(const{chunk:s,modules:t}of c.values()){const e=new Set;for(const o of t){const t=d.get(o);if(t){if(n.disconnectChunkAndModule(s,o),e.has(t))continue;e.add(t),s.split(t)}}}if(e){console.log("Top 20 chunks by request count:");const s=[...c.values()];s.sort(((s,t)=>t.requests-s.requests));for(const{chunk:t,modules:e,requests:o}of s.slice(0,20))console.log(`- ${o} requests for ${t.name} (has ${e.length} modules)`)}return i}))}))}}