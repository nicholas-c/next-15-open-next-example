"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"MinifyPlugin",{enumerable:!0,get:function(){return MinifyPlugin}});const _webpack=require("next/dist/compiled/webpack/webpack"),_plimit=_interop_require_default(require("next/dist/compiled/p-limit")),_profilingplugin=require("../../profiling-plugin");function _interop_require_default(e){return e&&e.__esModule?e:{default:e}}function buildError(e,i){return e.line?new _webpack.WebpackError(`${i} from Minifier\n${e.message} [${i}:${e.line},${e.col}]${e.stack?`\n${e.stack.split("\n").slice(1).join("\n")}`:""}`):e.stack?new _webpack.WebpackError(`${i} from Minifier\n${e.message}\n${e.stack}`):new _webpack.WebpackError(`${i} from Minifier\n${e.message}`)}const debugMinify=process.env.NEXT_DEBUG_MINIFY;class MinifyPlugin{constructor(e){this.options=e}async optimize(e,i,t,n,{SourceMapSource:r,RawSource:o}){const s=!this.options.noMangling,a=(_profilingplugin.spans.get(i)||_profilingplugin.spans.get(e)).traceChild("minify-webpack-plugin-optimize");return i.name&&a.setAttribute("compilationName",i.name),a.setAttribute("mangle",String(s)),a.traceAsyncFn((async()=>{const e=Object.keys(t),c=await Promise.all(e.filter((e=>{if(!_webpack.ModuleFilenameHelpers.matchObject.bind(void 0,{test:/\.[cm]?js(\?.*)?$/i})(e))return!1;const t=i.getAsset(e);if(!t)return console.log(e),!1;const{info:n}=t;return!n.minimized})).map((async e=>{const{info:t,source:r}=i.getAsset(e),o=n.mergeEtags(n.getLazyHashedEtag(r),JSON.stringify(this.options)),s=await n.getPromise(e,o);return debugMinify&&"1"===debugMinify&&console.log(JSON.stringify({name:e,source:r.source().toString()}),{breakLength:1/0,maxStringLength:1/0}),{name:e,info:t,inputSource:r,output:s,eTag:o}})));let u;const p=()=>({minify:async e=>await require("../../../../swc").minify(e.input,{...e.inputSourceMap?{sourceMap:{content:JSON.stringify(e.inputSourceMap)}}:{},compress:!1,mangle:s,module:"unknown",output:{comments:!1}})}),l=(0,_plimit.default)(1/0),m=[];for(const e of c)m.push(l((async()=>{const{name:t,inputSource:s,eTag:c}=e;let{output:u}=e;const l=a.traceChild("minify-js");return l.setAttribute("name",t),l.setAttribute("cache",void 0===u?"MISS":"HIT"),l.traceAsyncFn((async()=>{if(!u){const{source:e,map:a}=s.sourceAndMap(),l=Buffer.isBuffer(e)?e.toString():e;let m;try{m=await p().minify({input:l,inputSourceMap:a})}catch(e){return void i.errors.push(buildError(e,t))}const g=m.map?new r(m.code,t,m.map,l,a,!0):new o(m.code);await n.storePromise(t,c,{source:g}),u={source:g}}const e={minimized:!0};i.updateAsset(t,u.source,e)}))})));await Promise.all(m),u&&await u.end()}))}apply(e){var i;const{SourceMapSource:t,RawSource:n}=(null==e||null==(i=e.webpack)?void 0:i.sources)||_webpack.sources,r=this.constructor.name;e.hooks.thisCompilation.tap(r,(i=>{const o=i.getCache("MinifierWebpackPlugin"),s=(e,i)=>{e.update("c")};_webpack.webpack.javascript.JavascriptModulesPlugin.getCompilationHooks(i).chunkHash.tap(r,((e,i)=>{if(e.hasRuntime())return s(i,e)})),i.hooks.processAssets.tapPromise({name:r,stage:_webpack.webpack.Compilation.PROCESS_ASSETS_STAGE_OPTIMIZE_SIZE},(r=>this.optimize(e,i,r,o,{SourceMapSource:t,RawSource:n}))),i.hooks.statsPrinter.tap(r,(e=>{e.hooks.print.for("asset.info.minimized").tap("minify-webpack-plugin",((e,{green:i,formatFlag:t})=>e?i(t("minimized")):void 0))}))}))}}