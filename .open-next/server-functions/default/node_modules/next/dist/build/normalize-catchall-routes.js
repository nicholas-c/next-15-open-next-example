"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"normalizeCatchAllRoutes",{enumerable:!0,get:function(){return normalizeCatchAllRoutes}});const _interceptionroutes=require("../server/lib/interception-routes"),_apppathnamenormalizer=require("../server/normalizers/built/app/app-pathname-normalizer");function normalizeCatchAllRoutes(t,e=new _apppathnamenormalizer.AppPathnameNormalizer){const l=[...new Set(Object.values(t).flat().filter(isCatchAllRoute).sort(((t,e)=>e.split("/").length-t.split("/").length)))],n=Object.keys(t).filter((t=>!(0,_interceptionroutes.isInterceptionRouteAppPath)(t)));for(const r of n)for(const n of l){const l=e.normalize(n),i=l.slice(0,l.search(catchAllRouteRegex));r.startsWith(i)&&!t[r].some((t=>hasMatchedSlots(t,n)))&&(isOptionalCatchAll(n)||isCatchAll(n)&&i!==r)&&t[r].push(n)}}function hasMatchedSlots(t,e){const l=t.split("/").filter(isMatchableSlot),n=e.split("/").filter(isMatchableSlot);if(l.length!==n.length)return!1;for(let t=0;t<l.length;t++)if(l[t]!==n[t])return!1;return!0}function isMatchableSlot(t){return t.startsWith("@")&&"@children"!==t}const catchAllRouteRegex=/\[?\[\.\.\./;function isCatchAllRoute(t){return!isOptionalCatchAll(t)&&isCatchAll(t)}function isOptionalCatchAll(t){return t.includes("[[...")}function isCatchAll(t){return t.includes("[...")}