"use strict";function _export(t,e){for(var r in e)Object.defineProperty(t,r,{enumerable:!0,get:e[r]})}Object.defineProperty(exports,"__esModule",{value:!0}),_export(exports,{Span:function(){return Span},SpanStatus:function(){return SpanStatus},clearTraceEvents:function(){return clearTraceEvents},exportTraceState:function(){return exportTraceState},flushAllTraces:function(){return flushAllTraces},getTraceEvents:function(){return getTraceEvents},initializeTraceState:function(){return initializeTraceState},recordTraceEvents:function(){return recordTraceEvents},trace:function(){return trace}});const _report=require("./report"),NUM_OF_MICROSEC_IN_NANOSEC=BigInt("1000"),NUM_OF_MILLISEC_IN_NANOSEC=BigInt("1000000");let count=0;const getId=()=>(count++,count);let defaultParentSpanId,shouldSaveTraceEvents,savedTraceEvents=[];const RECORD_SPAN_THRESHOLD_MS=parseInt(process.env.NEXT_TRACE_SPAN_THRESHOLD_MS??"-1");var SpanStatus=function(t){return t.Started="started",t.Stopped="stopped",t}({});class Span{constructor({name:t,parentId:e,attrs:r,startTime:n}){this.name=t,this.parentId=e??defaultParentSpanId,this.attrs=r?{...r}:{},this.status="started",this.id=getId(),this._start=n||process.hrtime.bigint(),this.now=Date.now()}stop(t){if("stopped"===this.status)return;const e=((t||process.hrtime.bigint())-this._start)/NUM_OF_MICROSEC_IN_NANOSEC;if(this.status="stopped",e>Number.MAX_SAFE_INTEGER)throw Object.defineProperty(new Error(`Duration is too long to express as float64: ${e}`),"__NEXT_ERROR_CODE",{value:"E513",enumerable:!1,configurable:!0});const r=this._start/NUM_OF_MICROSEC_IN_NANOSEC,n={name:this.name,duration:Number(e),timestamp:Number(r),id:this.id,parentId:this.parentId,tags:this.attrs,startTime:this.now};e>1e3*RECORD_SPAN_THRESHOLD_MS&&(_report.reporter.report(n),shouldSaveTraceEvents&&savedTraceEvents.push(n))}traceChild(t,e){return new Span({name:t,parentId:this.id,attrs:e})}manualTraceChild(t,e,r,n){const a=process.hrtime.bigint()-BigInt(Date.now())*NUM_OF_MILLISEC_IN_NANOSEC;new Span({name:t,parentId:this.id,attrs:n,startTime:e?e+a:process.hrtime.bigint()}).stop(r?r+a:process.hrtime.bigint())}getId(){return this.id}setAttribute(t,e){this.attrs[t]=e}traceFn(t){try{return t(this)}finally{this.stop()}}async traceAsyncFn(t){try{return await t(this)}finally{this.stop()}}}const trace=(t,e,r)=>new Span({name:t,parentId:e,attrs:r}),flushAllTraces=t=>_report.reporter.flushAll(t),exportTraceState=()=>({defaultParentSpanId:defaultParentSpanId,lastId:count,shouldSaveTraceEvents:shouldSaveTraceEvents}),initializeTraceState=t=>{count=t.lastId,defaultParentSpanId=t.defaultParentSpanId,shouldSaveTraceEvents=t.shouldSaveTraceEvents};function getTraceEvents(){return savedTraceEvents}function recordTraceEvents(t){for(const e of t)_report.reporter.report(e),e.id>count&&(count=e.id+1);shouldSaveTraceEvents&&savedTraceEvents.push(...t)}const clearTraceEvents=()=>savedTraceEvents=[];