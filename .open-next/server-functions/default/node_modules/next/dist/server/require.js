"use strict";function _export(e,a){for(var t in a)Object.defineProperty(e,t,{enumerable:!0,get:a[t]})}Object.defineProperty(exports,"__esModule",{value:!0}),_export(exports,{getMaybePagePath:function(){return getMaybePagePath},getPagePath:function(){return getPagePath},requirePage:function(){return requirePage}});const _path=_interop_require_default(require("path")),_constants=require("../shared/lib/constants"),_normalizelocalepath=require("../shared/lib/i18n/normalize-locale-path"),_normalizepagepath=require("../shared/lib/page-path/normalize-page-path"),_denormalizepagepath=require("../shared/lib/page-path/denormalize-page-path"),_utils=require("../shared/lib/utils"),_lrucache=require("../server/lib/lru-cache"),_loadmanifest=require("./load-manifest"),_fs=require("fs");function _interop_require_default(e){return e&&e.__esModule?e:{default:e}}const isDev="development"===process.env.NODE_ENV,pagePathCache=isDev?null:new _lrucache.LRUCache(1e3);function getMaybePagePath(e,a,t,r){const n=`${e}:${a}:${t}:${r}`;let o=null==pagePathCache?void 0:pagePathCache.get(n);if(o)return o;const i=_path.default.join(a,_constants.SERVER_DIRECTORY);let l;r&&(l=(0,_loadmanifest.loadManifest)(_path.default.join(i,_constants.APP_PATHS_MANIFEST),!isDev));const s=(0,_loadmanifest.loadManifest)(_path.default.join(i,_constants.PAGES_MANIFEST),!isDev);try{e=(0,_denormalizepagepath.denormalizePagePath)((0,_normalizepagepath.normalizePagePath)(e))}catch(a){throw console.error(a),new _utils.PageNotFoundError(e)}const u=a=>{let r=a[e];if(!a[r]&&t){const n={};for(const e of Object.keys(a))n[(0,_normalizelocalepath.normalizeLocalePath)(e,t).pathname]=s[e];r=n[e]}return r};return l&&(o=u(l)),o||(o=u(s)),o?(o=_path.default.join(i,o),null==pagePathCache||pagePathCache.set(n,o),o):(null==pagePathCache||pagePathCache.set(n,null),null)}function getPagePath(e,a,t,r){const n=getMaybePagePath(e,a,t,r);if(!n)throw new _utils.PageNotFoundError(e);return n}async function requirePage(e,a,t){const r=getPagePath(e,a,void 0,t);if(r.endsWith(".html"))return _fs.promises.readFile(r,"utf8").catch((a=>{throw new _utils.MissingStaticPage(e,a.message)}));try{process.env.__NEXT_PRIVATE_RUNTIME_TYPE=t?"app":"pages";return process.env.NEXT_MINIMAL?__non_webpack_require__(r):require(r)}finally{process.env.__NEXT_PRIVATE_RUNTIME_TYPE=""}}