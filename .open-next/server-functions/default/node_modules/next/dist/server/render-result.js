"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"default",{enumerable:!0,get:function(){return RenderResult}});const _nodewebstreamshelper=require("./stream-utils/node-web-streams-helper"),_pipereadable=require("./pipe-readable");class RenderResult{static fromStatic(e){return new RenderResult(e,{metadata:{}})}constructor(e,{contentType:r,waitUntil:s,metadata:t}){this.response=e,this.contentType=r,this.metadata=t,this.waitUntil=s}assignMetadata(e){Object.assign(this.metadata,e)}get isNull(){return null===this.response}get isDynamic(){return"string"!=typeof this.response}toUnchunkedBuffer(e=!1){if(null===this.response)throw Object.defineProperty(new Error("Invariant: null responses cannot be unchunked"),"__NEXT_ERROR_CODE",{value:"E274",enumerable:!1,configurable:!0});if("string"!=typeof this.response){if(!e)throw Object.defineProperty(new Error("Invariant: dynamic responses cannot be unchunked. This is a bug in Next.js"),"__NEXT_ERROR_CODE",{value:"E81",enumerable:!1,configurable:!0});return(0,_nodewebstreamshelper.streamToBuffer)(this.readable)}return Buffer.from(this.response)}toUnchunkedString(e=!1){if(null===this.response)throw Object.defineProperty(new Error("Invariant: null responses cannot be unchunked"),"__NEXT_ERROR_CODE",{value:"E274",enumerable:!1,configurable:!0});if("string"!=typeof this.response){if(!e)throw Object.defineProperty(new Error("Invariant: dynamic responses cannot be unchunked. This is a bug in Next.js"),"__NEXT_ERROR_CODE",{value:"E81",enumerable:!1,configurable:!0});return(0,_nodewebstreamshelper.streamToString)(this.readable)}return this.response}get readable(){if(null===this.response)throw Object.defineProperty(new Error("Invariant: null responses cannot be streamed"),"__NEXT_ERROR_CODE",{value:"E14",enumerable:!1,configurable:!0});if("string"==typeof this.response)throw Object.defineProperty(new Error("Invariant: static responses cannot be streamed"),"__NEXT_ERROR_CODE",{value:"E151",enumerable:!1,configurable:!0});return Buffer.isBuffer(this.response)?(0,_nodewebstreamshelper.streamFromBuffer)(this.response):Array.isArray(this.response)?(0,_nodewebstreamshelper.chainStreams)(...this.response):this.response}chain(e){if(null===this.response)throw Object.defineProperty(new Error("Invariant: response is null. This is a bug in Next.js"),"__NEXT_ERROR_CODE",{value:"E258",enumerable:!1,configurable:!0});let r;r="string"==typeof this.response?[(0,_nodewebstreamshelper.streamFromString)(this.response)]:Array.isArray(this.response)?this.response:Buffer.isBuffer(this.response)?[(0,_nodewebstreamshelper.streamFromBuffer)(this.response)]:[this.response],r.push(e),this.response=r}async pipeTo(e){try{await this.readable.pipeTo(e,{preventClose:!0}),this.waitUntil&&await this.waitUntil,await e.close()}catch(r){if((0,_pipereadable.isAbortError)(r))return void await e.abort(r);throw r}}async pipeToNodeResponse(e){await(0,_pipereadable.pipeToNodeResponse)(this.readable,e,this.waitUntil)}}