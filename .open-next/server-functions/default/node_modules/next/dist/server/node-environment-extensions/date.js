"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const _utils=require("./utils");function createNow(e){return{now:function(){return(0,_utils.io)("`Date.now()`","time"),e()}}["now".slice()].bind(null)}function createDate(e){const t=Object.getOwnPropertyDescriptors(e);t.now.value=createNow(e.now);const r=Reflect.apply,n=Reflect.construct,o=Object.defineProperties((function(){return void 0===new.target?((0,_utils.io)("`Date()`","time"),r(e,void 0,arguments)):(0===arguments.length&&(0,_utils.io)("`new Date()`","time"),n(e,arguments,new.target))}),t);return Object.defineProperty(e.prototype,"constructor",{value:o}),o}try{Date=createDate(Date)}catch{console.error("Failed to install `Date` class extension. When using `experimental.dynamicIO`, APIs that read the current time will not correctly trigger dynamic behavior.")}