"use strict";function _export(e,t){for(var o in t)Object.defineProperty(e,o,{enumerable:!0,get:t[o]})}Object.defineProperty(exports,"__esModule",{value:!0}),_export(exports,{getStartServerInfo:function(){return getStartServerInfo},logStartInfo:function(){return logStartInfo}});const _env=require("@next/env"),_log=_interop_require_wildcard(require("../../build/output/log")),_picocolors=require("../../lib/picocolors"),_constants=require("../../shared/lib/constants"),_config=_interop_require_wildcard(require("../config"));function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,o=new WeakMap;return(_getRequireWildcardCache=function(e){return e?o:t})(e)}function _interop_require_wildcard(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var o=_getRequireWildcardCache(t);if(o&&o.has(e))return o.get(e);var r={__proto__:null},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var l in e)if("default"!==l&&Object.prototype.hasOwnProperty.call(e,l)){var i=n?Object.getOwnPropertyDescriptor(e,l):null;i&&(i.get||i.set)?Object.defineProperty(r,l,i):r[l]=e[l]}return r.default=e,o&&o.set(e,r),r}function logStartInfo({networkUrl:e,appUrl:t,envInfo:o,experimentalFeatures:r,maxExperimentalFeatures:n=1/0}){if(_log.bootstrap(`${(0,_picocolors.bold)((0,_picocolors.purple)(`${_log.prefixes.ready} Next.js 15.2.0`))}${process.env.TURBOPACK?" (Turbopack)":""}`),t&&_log.bootstrap(`- Local:        ${t}`),e&&_log.bootstrap(`- Network:      ${e}`),(null==o?void 0:o.length)&&_log.bootstrap(`- Environments: ${o.join(", ")}`),null==r?void 0:r.length){_log.bootstrap("- Experiments (use with caution):");for(const e of r.slice(0,n)){const t="boolean"===e.type?!0===e.value?(0,_picocolors.bold)("✓"):(0,_picocolors.bold)("⨯"):"·",o="number"===e.type?`: ${e.value}`:"";_log.bootstrap(`  ${t} ${e.name}${o}`)}r.length>n&&_log.bootstrap("  · ...")}_log.info("")}async function getStartServerInfo(e,t){let o=[];await(0,_config.default)(t?_constants.PHASE_DEVELOPMENT_SERVER:_constants.PHASE_PRODUCTION_BUILD,e,{onLoadUserConfig(e){const t=(0,_config.getConfiguredExperimentalFeatures)(e.experimental);o=t.sort((({name:e},{name:t})=>e.length-t.length))}});let r=[];const{loadedEnvFiles:n}=(0,_env.loadEnvConfig)(e,!0,console,!1);return n.length>0&&(r=n.map((e=>e.path))),{envInfo:r,experimentalFeatures:o}}