"use strict";function _export(e,r){for(var t in r)Object.defineProperty(e,t,{enumerable:!0,get:r[t]})}Object.defineProperty(exports,"__esModule",{value:!0}),_export(exports,{getRequestHandlers:function(){return getRequestHandlers},startServer:function(){return startServer}});const _getnetworkhost=require("../../lib/get-network-host");require("../next"),require("../require-hook");const _fs=_interop_require_default(require("fs")),_v8=_interop_require_default(require("v8")),_path=_interop_require_default(require("path")),_http=_interop_require_default(require("http")),_https=_interop_require_default(require("https")),_os=_interop_require_default(require("os")),_watchpack=_interop_require_default(require("next/dist/compiled/watchpack")),_log=_interop_require_wildcard(require("../../build/output/log")),_debug=_interop_require_default(require("next/dist/compiled/debug")),_utils=require("./utils"),_formathostname=require("./format-hostname"),_routerserver=require("./router-server"),_constants=require("../../shared/lib/constants"),_appinfolog=require("./app-info-log"),_turbopackwarning=require("../../lib/turbopack-warning"),_trace=require("../../trace"),_ispostpone=require("./router-utils/is-postpone"),_isipv6=require("./is-ipv6"),_asynccallbackset=require("./async-callback-set");function _interop_require_default(e){return e&&e.__esModule?e:{default:e}}function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var r=new WeakMap,t=new WeakMap;return(_getRequireWildcardCache=function(e){return e?t:r})(e)}function _interop_require_wildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var a={__proto__:null},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in e)if("default"!==n&&Object.prototype.hasOwnProperty.call(e,n)){var s=o?Object.getOwnPropertyDescriptor(e,n):null;s&&(s.get||s.set)?Object.defineProperty(a,n,s):a[n]=e[n]}return a.default=e,t&&t.set(e,a),a}0===performance.getEntriesByName("next-start").length&&performance.mark("next-start");const debug=(0,_debug.default)("next:start-server");let startServerSpan;async function getRequestHandlers({dir:e,port:r,isDev:t,onDevServerCleanup:a,server:o,hostname:n,minimalMode:s,keepAliveTimeout:i,experimentalHttpsServer:l,quiet:u}){return(0,_routerserver.initialize)({dir:e,port:r,hostname:n,onDevServerCleanup:a,dev:t,minimalMode:s,server:o,keepAliveTimeout:i,experimentalHttpsServer:l,startServerSpan:startServerSpan,quiet:u})}async function startServer(e){const{dir:r,isDev:t,hostname:a,minimalMode:o,allowRetry:n,keepAliveTimeout:s,selfSignedCertificate:i}=e;let{port:l}=e;process.title="next-server (v15.2.0)";let u,c=()=>{},p=()=>{},d=new Promise(((e,r)=>{c=e,p=r})),_=async(e,r)=>{if(d)return await d,_(e,r);throw Object.defineProperty(new Error("Invariant request handler was not setup"),"__NEXT_ERROR_CODE",{value:"E287",enumerable:!1,configurable:!0})},f=async(e,r,t)=>{if(d)return await d,f(e,r,t);throw Object.defineProperty(new Error("Invariant upgrade handler was not setup"),"__NEXT_ERROR_CODE",{value:"E290",enumerable:!1,configurable:!0})};if(i&&!t)throw Object.defineProperty(new Error("Using a self signed certificate is only supported with `next dev`."),"__NEXT_ERROR_CODE",{value:"E128",enumerable:!1,configurable:!0});async function v(e,r){try{d&&(await d,d=void 0),await _(e,r)}catch(t){r.statusCode=500,r.end("Internal Server Error"),_log.error(`Failed to handle request for ${e.url}`),console.error(t)}finally{t&&_v8.default.getHeapStatistics().used_heap_size>.8*_v8.default.getHeapStatistics().heap_size_limit&&(_log.warn("Server is approaching the used memory threshold, restarting..."),(0,_trace.trace)("server-restart-close-to-memory-threshold",void 0,{"memory.heapSizeLimit":String(_v8.default.getHeapStatistics().heap_size_limit),"memory.heapUsed":String(_v8.default.getHeapStatistics().used_heap_size)}).stop(),await(0,_trace.flushAllTraces)(),process.exit(_utils.RESTART_EXIT_CODE))}}const m=i?_https.default.createServer({key:_fs.default.readFileSync(i.key),cert:_fs.default.readFileSync(i.cert)},v):_http.default.createServer(v);s&&(m.keepAliveTimeout=s),m.on("upgrade",(async(e,r,t)=>{try{await f(e,r,t)}catch(t){r.destroy(),_log.error(`Failed to handle request for ${e.url}`),console.error(t)}}));let g=0;m.on("error",(e=>{n&&l&&t&&"EADDRINUSE"===e.code&&g<10?(_log.warn(`Port ${l} is in use, trying ${l+1} instead.`),l+=1,g+=1,m.listen(l,a)):(_log.error("Failed to start server"),console.error(e),process.exit(1))}));let h=t?new _asynccallbackset.AsyncCallbackSet:void 0;if(await new Promise((n=>{m.on("listening",(async()=>{const d=(0,_utils.getNodeDebugType)(),v=m.address(),g=(0,_formathostname.formatHostname)("object"==typeof v?(null==v?void 0:v.address)||a||"localhost":v),S=a&&"0.0.0.0"!==g?"[::]"===g?"[::1]":(0,_formathostname.formatHostname)(a):"localhost";l="object"==typeof v&&(null==v?void 0:v.port)||l;const y=a??(0,_getnetworkhost.getNetworkHost)((0,_isipv6.isIPv6)(g)?"IPv6":"IPv4"),w=i?"https":"http",q=y?`${w}://${(0,_formathostname.formatHostname)(y)}:${l}`:null,b=`${w}://${S}:${l}`;if(d){const e=(0,_utils.getFormattedDebugAddress)();_log.info(`the --${d} option was detected, the Next.js router server should be inspected at ${e}.`)}let E,R;if(process.env.PORT=l+"",process.env.__NEXT_PRIVATE_ORIGIN=b,t){const e=await(0,_appinfolog.getStartServerInfo)(r,t);E=e.envInfo,R=e.experimentalFeatures}(0,_appinfolog.logStartInfo)({networkUrl:q,appUrl:b,envInfo:E,experimentalFeatures:R,maxExperimentalFeatures:3}),_log.event("Starting...");try{let n=!1,p=null;const d=()=>{n||(n=!0,(async()=>{debug("start-server process cleanup"),await new Promise((e=>{m.close((r=>{r&&console.error(r),e()})),t&&(m.closeAllConnections(),null==p||p())})),await Promise.all([null==u?void 0:u.close().catch(console.error),null==h?void 0:h.runAll().catch(console.error)]),debug("start-server process cleanup finished"),process.exit(0)})())},v=e=>{(0,_ispostpone.isPostpone)(e)||console.error(e)};process.env.NEXT_MANUAL_SIG_HANDLE||(process.on("SIGINT",d),process.on("SIGTERM",d)),process.on("rejectionHandled",(()=>{})),process.on("uncaughtException",v),process.on("unhandledRejection",v);const g=await getRequestHandlers({dir:r,port:l,isDev:t,onDevServerCleanup:h?h.add.bind(h):void 0,server:m,hostname:a,minimalMode:o,keepAliveTimeout:s,experimentalHttpsServer:!!i});_=g.requestHandler,f=g.upgradeHandler,u=g.server,p=g.closeUpgraded;const S=performance.mark("next-start-end")&&performance.measure("next-start-duration","next-start","next-start-end").duration;c();const y=S>2e3?Math.round(S/100)/10+"s":`${Math.round(S)}ms`;_log.event(`Ready in ${y}`),process.env.TURBOPACK&&await(0,_turbopackwarning.validateTurboNextConfig)({dir:e.dir,isDev:!0})}catch(e){p(),console.error(e),process.exit(1)}n()})),m.listen(l,a)})),t){function S(e,r){const t=new _watchpack.default;t.watch({files:_constants.CONFIG_FILES.map((r=>_path.default.join(e,r)))}),t.on("change",r)}S(r,(async e=>{process.env.__NEXT_DISABLE_MEMORY_WATCHER?_log.info("Detected change, manual restart required due to '__NEXT_DISABLE_MEMORY_WATCHER' usage"):(_log.warn(`Found a change in ${_path.default.basename(e)}. Restarting the server to apply the changes...`),process.exit(_utils.RESTART_EXIT_CODE))}))}}process.env.NEXT_PRIVATE_WORKER&&process.send&&(process.addListener("message",(async e=>{if(e&&"object"==typeof e&&e.nextWorkerOptions&&process.send){startServerSpan=(0,_trace.trace)("start-dev-server",void 0,{cpus:String(_os.default.cpus().length),platform:_os.default.platform(),"memory.freeMem":String(_os.default.freemem()),"memory.totalMem":String(_os.default.totalmem()),"memory.heapSizeLimit":String(_v8.default.getHeapStatistics().heap_size_limit)}),await startServerSpan.traceAsyncFn((()=>startServer(e.nextWorkerOptions)));const r=process.memoryUsage();startServerSpan.setAttribute("memory.rss",String(r.rss)),startServerSpan.setAttribute("memory.heapTotal",String(r.heapTotal)),startServerSpan.setAttribute("memory.heapUsed",String(r.heapUsed)),process.send({nextServerReady:!0,port:process.env.PORT})}})),process.send({nextWorkerReady:!0}));