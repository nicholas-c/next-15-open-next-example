"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"I18NProvider",{enumerable:!0,get:function(){return I18NProvider}});const _requestmeta=require("../request-meta");class I18NProvider{constructor(e){var t;if(this.config=e,!e.locales.length)throw Object.defineProperty(new Error("Invariant: No locales provided"),"__NEXT_ERROR_CODE",{value:"E510",enumerable:!1,configurable:!0});this.lowerCaseLocales=e.locales.map((e=>e.toLowerCase())),this.lowerCaseDomains=null==(t=e.domains)?void 0:t.map((e=>{var t;const o=e.domain.toLowerCase();return{defaultLocale:e.defaultLocale.toLowerCase(),hostname:o.split(":",1)[0],domain:o,locales:null==(t=e.locales)?void 0:t.map((e=>e.toLowerCase())),http:e.http}}))}detectDomainLocale(e,t){if(e&&this.lowerCaseDomains&&this.config.domains){t&&(t=t.toLowerCase());for(let a=0;a<this.lowerCaseDomains.length;a++){var o;const r=this.lowerCaseDomains[a];if(r.hostname===e||(null==(o=r.locales)?void 0:o.some((e=>e===t))))return this.config.domains[a]}}}fromRequest(e,t){const o=(0,_requestmeta.getRequestMeta)(e,"locale");if(o){const e=this.analyze(t);if(e.detectedLocale){if(e.detectedLocale!==o)throw Object.defineProperty(new Error(`Invariant: The detected locale does not match the locale in the query. Expected to find '${o}' in '${t}' but found '${e.detectedLocale}'}`),"__NEXT_ERROR_CODE",{value:"E517",enumerable:!1,configurable:!0});t=e.pathname}}return{pathname:t,detectedLocale:o,inferredFromDefault:(0,_requestmeta.getRequestMeta)(e,"localeInferredFromDefault")??!1}}analyze(e,t={}){let o=t.defaultLocale,a="string"==typeof o;const r=e.split("/",2);if(!r[1])return{detectedLocale:o,pathname:e,inferredFromDefault:a};const l=r[1].toLowerCase(),n=this.lowerCaseLocales.indexOf(l);return n<0?{detectedLocale:o,pathname:e,inferredFromDefault:a}:(o=this.config.locales[n],a=!1,{detectedLocale:o,pathname:e=e.slice(o.length+1)||"/",inferredFromDefault:a})}}