"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"LRUCache",{enumerable:!0,get:function(){return LRUCache}});class LRUCache{constructor(e,t){this.cache=new Map,this.sizes=new Map,this.totalSize=0,this.maxSize=e,this.calculateSize=t||(()=>1)}set(e,t){if(!e||!t)return;const s=this.calculateSize(t);s>this.maxSize?console.warn("Single item size exceeds maxSize"):(this.cache.has(e)&&(this.totalSize-=this.sizes.get(e)||0),this.cache.set(e,t),this.sizes.set(e,s),this.totalSize+=s,this.touch(e))}has(e){return!!e&&(this.touch(e),Boolean(this.cache.get(e)))}get(e){if(!e)return;const t=this.cache.get(e);return void 0!==t?(this.touch(e),t):void 0}touch(e){const t=this.cache.get(e);void 0!==t&&(this.cache.delete(e),this.cache.set(e,t),this.evictIfNecessary())}evictIfNecessary(){for(;this.totalSize>this.maxSize&&this.cache.size>0;)this.evictLeastRecentlyUsed()}evictLeastRecentlyUsed(){const e=this.cache.keys().next().value;if(void 0!==e){const t=this.sizes.get(e)||0;this.totalSize-=t,this.cache.delete(e),this.sizes.delete(e)}}reset(){this.cache.clear(),this.sizes.clear(),this.totalSize=0}keys(){return[...this.cache.keys()]}remove(e){this.cache.has(e)&&(this.totalSize-=this.sizes.get(e)||0,this.cache.delete(e),this.sizes.delete(e))}clear(){this.cache.clear(),this.sizes.clear(),this.totalSize=0}get size(){return this.cache.size}get currentSize(){return this.totalSize}}