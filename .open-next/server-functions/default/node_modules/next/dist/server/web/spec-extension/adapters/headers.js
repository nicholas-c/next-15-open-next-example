"use strict";function _export(e,r){for(var t in r)Object.defineProperty(e,t,{enumerable:!0,get:r[t]})}Object.defineProperty(exports,"__esModule",{value:!0}),_export(exports,{HeadersAdapter:function(){return HeadersAdapter},ReadonlyHeadersError:function(){return ReadonlyHeadersError}});const _reflect=require("./reflect");class ReadonlyHeadersError extends Error{constructor(){super("Headers cannot be modified. Read more: https://nextjs.org/docs/app/api-reference/functions/headers")}static callable(){throw new ReadonlyHeadersError}}class HeadersAdapter extends Headers{constructor(e){super(),this.headers=new Proxy(e,{get(r,t,s){if("symbol"==typeof t)return _reflect.ReflectAdapter.get(r,t,s);const o=t.toLowerCase(),a=Object.keys(e).find((e=>e.toLowerCase()===o));return void 0!==a?_reflect.ReflectAdapter.get(r,a,s):void 0},set(r,t,s,o){if("symbol"==typeof t)return _reflect.ReflectAdapter.set(r,t,s,o);const a=t.toLowerCase(),n=Object.keys(e).find((e=>e.toLowerCase()===a));return _reflect.ReflectAdapter.set(r,n??t,s,o)},has(r,t){if("symbol"==typeof t)return _reflect.ReflectAdapter.has(r,t);const s=t.toLowerCase(),o=Object.keys(e).find((e=>e.toLowerCase()===s));return void 0!==o&&_reflect.ReflectAdapter.has(r,o)},deleteProperty(r,t){if("symbol"==typeof t)return _reflect.ReflectAdapter.deleteProperty(r,t);const s=t.toLowerCase(),o=Object.keys(e).find((e=>e.toLowerCase()===s));return void 0===o||_reflect.ReflectAdapter.deleteProperty(r,o)}})}static seal(e){return new Proxy(e,{get(e,r,t){switch(r){case"append":case"delete":case"set":return ReadonlyHeadersError.callable;default:return _reflect.ReflectAdapter.get(e,r,t)}}})}merge(e){return Array.isArray(e)?e.join(", "):e}static from(e){return e instanceof Headers?e:new HeadersAdapter(e)}append(e,r){const t=this.headers[e];"string"==typeof t?this.headers[e]=[t,r]:Array.isArray(t)?t.push(r):this.headers[e]=r}delete(e){delete this.headers[e]}get(e){const r=this.headers[e];return void 0!==r?this.merge(r):null}has(e){return void 0!==this.headers[e]}set(e,r){this.headers[e]=r}forEach(e,r){for(const[t,s]of this.entries())e.call(r,s,t,this)}*entries(){for(const e of Object.keys(this.headers)){const r=e.toLowerCase(),t=this.get(r);yield[r,t]}}*keys(){for(const e of Object.keys(this.headers)){const r=e.toLowerCase();yield r}}*values(){for(const e of Object.keys(this.headers)){const r=this.get(e);yield r}}[Symbol.iterator](){return this.entries()}}