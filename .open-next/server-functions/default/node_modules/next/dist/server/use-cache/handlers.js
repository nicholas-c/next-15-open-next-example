"use strict";function _export(e,r){for(var n in r)Object.defineProperty(e,n,{enumerable:!0,get:r[n]})}Object.defineProperty(exports,"__esModule",{value:!0}),_export(exports,{getCacheHandler:function(){return getCacheHandler},getCacheHandlers:function(){return getCacheHandlers},initializeCacheHandlers:function(){return initializeCacheHandlers},setCacheHandler:function(){return setCacheHandler}});const _default=_interop_require_default(require("../lib/cache-handlers/default"));function _interop_require_default(e){return e&&e.__esModule?e:{default:e}}const debug=process.env.NEXT_PRIVATE_DEBUG_USE_CACHE?(e,...r)=>{console.log(`use-cache[${process.pid}]: ${e}`,...r)}:()=>{},handlersSymbol=Symbol.for("@next/cache-handlers"),handlersMapSymbol=Symbol.for("@next/cache-handlers-map"),handlersSetSymbol=Symbol.for("@next/cache-handlers-set"),reference=globalThis;function initializeCacheHandlers(){if(reference[handlersMapSymbol])return debug("cache handlers already initialized"),!1;if(debug("initializing cache handlers"),reference[handlersMapSymbol]=new Map,reference[handlersSymbol]){let e;reference[handlersSymbol].DefaultCache?(debug('setting "default" cache handler from symbol'),e=reference[handlersSymbol].DefaultCache):(debug('setting "default" cache handler from default'),e=_default.default),reference[handlersMapSymbol].set("default",e),reference[handlersSymbol].RemoteCache?(debug('setting "remote" cache handler from symbol'),reference[handlersMapSymbol].set("remote",reference[handlersSymbol].RemoteCache)):(debug('setting "remote" cache handler from default'),reference[handlersMapSymbol].set("remote",e))}else debug('setting "default" cache handler from default'),reference[handlersMapSymbol].set("default",_default.default),debug('setting "remote" cache handler from default'),reference[handlersMapSymbol].set("remote",_default.default);return reference[handlersSetSymbol]=new Set(reference[handlersMapSymbol].values()),!0}function getCacheHandler(e){if(!reference[handlersMapSymbol])throw Object.defineProperty(new Error("Cache handlers not initialized"),"__NEXT_ERROR_CODE",{value:"E649",enumerable:!1,configurable:!0});return reference[handlersMapSymbol].get(e)}function getCacheHandlers(){if(reference[handlersSetSymbol])return reference[handlersSetSymbol].values()}function setCacheHandler(e,r){if(!reference[handlersMapSymbol]||!reference[handlersSetSymbol])throw Object.defineProperty(new Error("Cache handlers not initialized"),"__NEXT_ERROR_CODE",{value:"E649",enumerable:!1,configurable:!0});debug('setting cache handler for "%s"',e),reference[handlersMapSymbol].set(e,r),reference[handlersSetSymbol].add(r)}