"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"generateEncryptionKeyBase64",{enumerable:!0,get:function(){return generateEncryptionKeyBase64}});const _path=_interop_require_default(require("path")),_fs=_interop_require_default(require("fs")),_cachedir=require("../cache-dir"),_encryptionutils=require("./encryption-utils");function _interop_require_default(e){return e&&e.__esModule?e:{default:e}}let __next_encryption_key_generation_promise=null;const CONFIG_FILE=".rscinfo",ENCRYPTION_KEY="encryption.key",ENCRYPTION_EXPIRE_AT="encryption.expire_at",EXPIRATION=12096e5;async function writeCache(e,t){const r=(0,_cachedir.getStorageDirectory)(e);if(!r)return;const n=_path.default.join(r,CONFIG_FILE);_fs.default.existsSync(r)||await _fs.default.promises.mkdir(r,{recursive:!0}),await _fs.default.promises.writeFile(n,JSON.stringify({[ENCRYPTION_KEY]:t,[ENCRYPTION_EXPIRE_AT]:Date.now()+EXPIRATION}))}async function loadOrGenerateKey(e,t,r){const n=(0,_cachedir.getStorageDirectory)(e);if(!n)return await r();const i=_path.default.join(n,CONFIG_FILE);async function _(){if(!_fs.default.existsSync(i))return!1;try{const e=JSON.parse(await _fs.default.promises.readFile(i,"utf8"));if(!e)return!1;if("string"!=typeof e[ENCRYPTION_KEY]||"number"!=typeof e[ENCRYPTION_EXPIRE_AT])return!1;if(t&&e[ENCRYPTION_EXPIRE_AT]<Date.now())return!1;const r=e[ENCRYPTION_KEY];return(!r||!process.env.NEXT_SERVER_ACTIONS_ENCRYPTION_KEY||r===process.env.NEXT_SERVER_ACTIONS_ENCRYPTION_KEY)&&r}catch{return!1}}const a=await _();if("string"==typeof a)return a;const o=await r();return await writeCache(e,o),o}async function generateEncryptionKeyBase64({isBuild:e,distDir:t}){return __next_encryption_key_generation_promise||(__next_encryption_key_generation_promise=loadOrGenerateKey(t,e,(async()=>{const e=process.env.NEXT_SERVER_ACTIONS_ENCRYPTION_KEY;if(e)return e;const t=await crypto.subtle.generateKey({name:"AES-GCM",length:256},!0,["encrypt","decrypt"]),r=await crypto.subtle.exportKey("raw",t);return btoa((0,_encryptionutils.arrayBufferToString)(r))}))),__next_encryption_key_generation_promise}