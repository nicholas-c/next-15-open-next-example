"use strict";function _export(e,r){for(var n in r)Object.defineProperty(e,n,{enumerable:!0,get:r[n]})}function isHangingPromiseRejectionError(e){return"object"==typeof e&&null!==e&&"digest"in e&&e.digest===HANGING_PROMISE_REJECTION}Object.defineProperty(exports,"__esModule",{value:!0}),_export(exports,{isHangingPromiseRejectionError:function(){return isHangingPromiseRejectionError},makeHangingPromise:function(){return makeHangingPromise}});const HANGING_PROMISE_REJECTION="HANGING_PROMISE_REJECTION";class HangingPromiseRejectionError extends Error{constructor(e){super(`During prerendering, ${e} rejects when the prerender is complete. Typically these errors are handled by React but if you move ${e} to a different context by using \`setTimeout\`, \`after\`, or similar functions you may observe this error and you should handle it in that context.`),this.expression=e,this.digest=HANGING_PROMISE_REJECTION}}function makeHangingPromise(e,r){const n=new Promise(((n,t)=>{e.addEventListener("abort",(()=>{t(new HangingPromiseRejectionError(r))}),{once:!0})}));return n.catch(ignoreReject),n}function ignoreReject(){}