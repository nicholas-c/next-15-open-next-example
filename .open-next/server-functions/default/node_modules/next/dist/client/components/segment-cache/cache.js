"use strict";function _export(e,t){for(var n in t)Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}Object.defineProperty(exports,"__esModule",{value:!0}),_export(exports,{EntryStatus:function(){return EntryStatus},FetchStrategy:function(){return FetchStrategy},convertRouteTreeToFlightRouterState:function(){return convertRouteTreeToFlightRouterState},createDetachedSegmentCacheEntry:function(){return createDetachedSegmentCacheEntry},fetchRouteOnCacheMiss:function(){return fetchRouteOnCacheMiss},fetchSegmentOnCacheMiss:function(){return fetchSegmentOnCacheMiss},fetchSegmentPrefetchesUsingDynamicRequest:function(){return fetchSegmentPrefetchesUsingDynamicRequest},getCurrentCacheVersion:function(){return getCurrentCacheVersion},readExactRouteCacheEntry:function(){return readExactRouteCacheEntry},readOrCreateRevalidatingSegmentEntry:function(){return readOrCreateRevalidatingSegmentEntry},readOrCreateRouteCacheEntry:function(){return readOrCreateRouteCacheEntry},readOrCreateSegmentCacheEntry:function(){return readOrCreateSegmentCacheEntry},readRouteCacheEntry:function(){return readRouteCacheEntry},readSegmentCacheEntry:function(){return readSegmentCacheEntry},resetRevalidatingSegmentEntry:function(){return resetRevalidatingSegmentEntry},revalidateEntireCache:function(){return revalidateEntireCache},upgradeToPendingSegment:function(){return upgradeToPendingSegment},upsertSegmentEntry:function(){return upsertSegmentEntry},waitForSegmentCacheEntry:function(){return waitForSegmentCacheEntry}});const _approuterheaders=require("../app-router-headers"),_fetchserverresponse=require("../router-reducer/fetch-server-response"),_scheduler=require("./scheduler"),_appbuildid=require("../../app-build-id"),_createhreffromurl=require("../router-reducer/create-href-from-url"),_tuplemap=require("./tuple-map"),_lru=require("./lru"),_segmentvalueencoding=require("../../../server/app-render/segment-value-encoding"),_flightdatahelpers=require("../../flight-data-helpers"),_prefetchcacheutils=require("../router-reducer/prefetch-cache-utils"),_link=require("../../app-dir/link");var EntryStatus=function(e){return e[e.Empty=0]="Empty",e[e.Pending=1]="Pending",e[e.Fulfilled=2]="Fulfilled",e[e.Rejected=3]="Rejected",e}({}),FetchStrategy=function(e){return e[e.PPR=0]="PPR",e[e.Full=1]="Full",e[e.LoadingBoundary=2]="LoadingBoundary",e}({});let routeCacheMap=(0,_tuplemap.createTupleMap)();const maxRouteLruSize=10485760;let routeCacheLru=(0,_lru.createLRU)(maxRouteLruSize,onRouteLRUEviction),segmentCacheMap=new Map;const maxSegmentLruSize=52428800;let segmentCacheLru=(0,_lru.createLRU)(maxSegmentLruSize,onSegmentLRUEviction),currentCacheVersion=0;function getCurrentCacheVersion(){return currentCacheVersion}function revalidateEntireCache(e,t){currentCacheVersion++,routeCacheMap=(0,_tuplemap.createTupleMap)(),routeCacheLru=(0,_lru.createLRU)(maxRouteLruSize,onRouteLRUEviction),segmentCacheMap=new Map,segmentCacheLru=(0,_lru.createLRU)(maxSegmentLruSize,onSegmentLRUEviction),(0,_link.pingVisibleLinks)(e,t)}function readExactRouteCacheEntry(e,t,n){const r=null===n?[t]:[t,n],a=routeCacheMap.get(r);if(null!==a){if(a.staleAt>e)return routeCacheLru.put(a),a;deleteRouteFromCache(a,r)}return null}function readRouteCacheEntry(e,t){const n=readExactRouteCacheEntry(e,t.href,null);return null===n||n.couldBeIntercepted?readExactRouteCacheEntry(e,t.href,t.nextUrl):n}function readSegmentCacheEntry(e,t){const n=segmentCacheMap.get(t);if(void 0!==n){if(n.staleAt>e)return segmentCacheLru.put(n),n;{const r=n.revalidating;if(null!==r){const n=upsertSegmentEntry(e,t,r);if(null!==n&&n.staleAt>e)return n}else deleteSegmentFromCache(n,t)}}return null}function readRevalidatingSegmentCacheEntry(e,t){const n=t.revalidating;if(null!==n){if(n.staleAt>e)return n;clearRevalidatingSegmentFromOwner(t)}return null}function waitForSegmentCacheEntry(e){let t=e.promise;return null===t&&(t=e.promise=createPromiseWithResolvers()),t.promise}function readOrCreateRouteCacheEntry(e,t){const n=t.key,r=readRouteCacheEntry(e,n);if(null!==r)return r;const a={canonicalUrl:null,status:0,blockedTasks:null,tree:null,head:null,isHeadPartial:!0,staleAt:1/0,couldBeIntercepted:!0,isPPREnabled:!1,keypath:null,next:null,prev:null,size:0},o=null===n.nextUrl?[n.href]:[n.href,n.nextUrl];return routeCacheMap.set(o,a),a.keypath=o,routeCacheLru.put(a),a}function readOrCreateSegmentCacheEntry(e,t,n){const r=readSegmentCacheEntry(e,n);if(null!==r)return r;const a=createDetachedSegmentCacheEntry(t.staleAt);return segmentCacheMap.set(n,a),a.key=n,segmentCacheLru.put(a),a}function readOrCreateRevalidatingSegmentEntry(e,t){const n=readRevalidatingSegmentCacheEntry(e,t);if(null!==n)return n;const r=createDetachedSegmentCacheEntry(t.staleAt);return t.revalidating=r,r}function upsertSegmentEntry(e,t,n){const r=readSegmentCacheEntry(e,t);if(null!==r){if(n.isPartial&&!r.isPartial){const e=n;return e.status=3,e.loading=null,e.rsc=null,null}deleteSegmentFromCache(r,t)}return segmentCacheMap.set(t,n),n.key=t,segmentCacheLru.put(n),n}function createDetachedSegmentCacheEntry(e){return{status:0,fetchStrategy:0,revalidating:null,rsc:null,loading:null,staleAt:e,isPartial:!0,promise:null,key:null,next:null,prev:null,size:0}}function upgradeToPendingSegment(e,t){const n=e;return n.status=1,n.fetchStrategy=t,n}function deleteRouteFromCache(e,t){pingBlockedTasks(e),routeCacheMap.delete(t),routeCacheLru.delete(e)}function deleteSegmentFromCache(e,t){cancelEntryListeners(e),segmentCacheMap.delete(t),segmentCacheLru.delete(e),clearRevalidatingSegmentFromOwner(e)}function clearRevalidatingSegmentFromOwner(e){const t=e.revalidating;null!==t&&(cancelEntryListeners(t),e.revalidating=null)}function resetRevalidatingSegmentEntry(e){clearRevalidatingSegmentFromOwner(e);const t=createDetachedSegmentCacheEntry(e.staleAt);return e.revalidating=t,t}function onRouteLRUEviction(e){const t=e.keypath;null!==t&&(e.keypath=null,pingBlockedTasks(e),routeCacheMap.delete(t))}function onSegmentLRUEviction(e){const t=e.key;null!==t&&(e.key=null,cancelEntryListeners(e),segmentCacheMap.delete(t))}function cancelEntryListeners(e){1===e.status&&null!==e.promise&&(e.promise.resolve(null),e.promise=null)}function pingBlockedTasks(e){const t=e.blockedTasks;if(null!==t){for(const e of t)(0,_scheduler.pingPrefetchTask)(e);e.blockedTasks=null}}function fulfillRouteCacheEntry(e,t,n,r,a,o,c,u){const l=e;return l.status=2,l.tree=t,l.head=n,l.isHeadPartial=r,l.staleAt=a,l.couldBeIntercepted=o,l.canonicalUrl=c,l.isPPREnabled=u,pingBlockedTasks(e),l}function fulfillSegmentCacheEntry(e,t,n,r,a){const o=e;return o.status=2,o.rsc=t,o.loading=n,o.staleAt=r,o.isPartial=a,null!==e.promise&&(e.promise.resolve(o),o.promise=null),o}function rejectRouteCacheEntry(e,t){const n=e;n.status=3,n.staleAt=t,pingBlockedTasks(e)}function rejectSegmentCacheEntry(e,t){const n=e;n.status=3,n.staleAt=t,null!==e.promise&&(e.promise.resolve(null),e.promise=null)}function convertRootTreePrefetchToRouteTree(e){return convertTreePrefetchToRouteTree(e.tree,_segmentvalueencoding.ROOT_SEGMENT_KEY)}function convertTreePrefetchToRouteTree(e,t){let n=null;const r=e.slots;if(null!==r){n={};for(let e in r){const a=r[e],o=a.segment,c=(0,_segmentvalueencoding.encodeChildSegmentKey)(t,e,(0,_segmentvalueencoding.encodeSegment)(o));n[e]=convertTreePrefetchToRouteTree(a,c)}}return{key:t,segment:e.segment,slots:n,isRootLayout:e.isRootLayout}}function convertRootFlightRouterStateToRouteTree(e){return convertFlightRouterStateToRouteTree(e,_segmentvalueencoding.ROOT_SEGMENT_KEY)}function convertFlightRouterStateToRouteTree(e,t){let n=null;const r=e[1];for(let e in r){const a=r[e],o=a[0],c=convertFlightRouterStateToRouteTree(a,(0,_segmentvalueencoding.encodeChildSegmentKey)(t,e,(0,_segmentvalueencoding.encodeSegment)(o)));null===n?n={[e]:c}:n[e]=c}return{key:t,segment:e[0],slots:n,isRootLayout:!0===e[4]}}function convertRouteTreeToFlightRouterState(e){const t={};if(null!==e.slots)for(const n in e.slots)t[n]=convertRouteTreeToFlightRouterState(e.slots[n]);return[e.segment,t,null,null,e.isRootLayout]}async function fetchRouteOnCacheMiss(e,t){const n=t.key,r=n.href,a=n.nextUrl;try{const t=await fetchSegmentPrefetchResponse(r,"/_tree",a);if(!t||!t.ok||204===t.status||!t.body)return rejectRouteCacheEntry(e,Date.now()+1e4),null;const n=t.redirected?(0,_createhreffromurl.createHrefFromUrl)((0,_fetchserverresponse.urlToUrlWithoutFlightMarker)(t.url)):r,o=t.headers.get("vary"),c=null!==o&&o.includes(_approuterheaders.NEXT_URL),u=createPromiseWithResolvers(),l="2"===t.headers.get(_approuterheaders.NEXT_DID_POSTPONE_HEADER);if(l){const r=createPrefetchResponseStream(t.body,u.resolve,(function(t){routeCacheLru.updateSize(e,t)})),a=await(0,_fetchserverresponse.createFromNextReadableStream)(r);if(a.buildId!==(0,_appbuildid.getAppBuildId)())return rejectRouteCacheEntry(e,Date.now()+1e4),null;const o=1e3*a.staleTime;fulfillRouteCacheEntry(e,convertRootTreePrefetchToRouteTree(a),a.head,a.isHeadPartial,Date.now()+o,c,n,l)}else{const r=createPrefetchResponseStream(t.body,u.resolve,(function(t){routeCacheLru.updateSize(e,t)})),a=await(0,_fetchserverresponse.createFromNextReadableStream)(r);writeDynamicTreeResponseIntoCache(Date.now(),t,a,e,c,n,l)}if(!c&&null!==a){const t=[r,a];if(routeCacheMap.get(t)===e){routeCacheMap.delete(t);const n=[r];routeCacheMap.set(n,e),e.keypath=n}}return{value:null,closed:u.promise}}catch(t){return rejectRouteCacheEntry(e,Date.now()+1e4),null}}async function fetchSegmentOnCacheMiss(e,t,n,r){const a=n.href;try{const o=await fetchSegmentPrefetchResponse(a,r===_segmentvalueencoding.ROOT_SEGMENT_KEY?"/_index":r,n.nextUrl);if(!o||!o.ok||204===o.status||"2"!==o.headers.get(_approuterheaders.NEXT_DID_POSTPONE_HEADER)||!o.body)return rejectSegmentCacheEntry(t,Date.now()+1e4),null;const c=createPromiseWithResolvers(),u=createPrefetchResponseStream(o.body,c.resolve,(function(e){segmentCacheLru.updateSize(t,e)})),l=await(0,_fetchserverresponse.createFromNextReadableStream)(u);return l.buildId!==(0,_appbuildid.getAppBuildId)()?(rejectSegmentCacheEntry(t,Date.now()+1e4),null):{value:fulfillSegmentCacheEntry(t,l.rsc,l.loading,e.staleAt,l.isPartial),closed:c.promise}}catch(e){return rejectSegmentCacheEntry(t,Date.now()+1e4),null}}async function fetchSegmentPrefetchesUsingDynamicRequest(e,t,n,r,a){const o=e.key.href,c=e.key.nextUrl,u={[_approuterheaders.RSC_HEADER]:"1",[_approuterheaders.NEXT_ROUTER_STATE_TREE_HEADER]:encodeURIComponent(JSON.stringify(r))};null!==c&&(u[_approuterheaders.NEXT_URL]=c),1!==n&&(u[_approuterheaders.NEXT_ROUTER_PREFETCH_HEADER]="1");try{const e=await fetchPrefetchResponse(o,u);if(!e||!e.ok||!e.body)return rejectSegmentEntriesIfStillPending(a,Date.now()+1e4),null;const n=createPromiseWithResolvers();let r=null;const c=createPrefetchResponseStream(e.body,n.resolve,(function(e){if(null===r)return;const t=e/r.length;for(const e of r)segmentCacheLru.updateSize(e,t)})),l=await(0,_fetchserverresponse.createFromNextReadableStream)(c);return r=writeDynamicRenderResponseIntoCache(Date.now(),e,l,t,a),{value:null,closed:n.promise}}catch(e){return rejectSegmentEntriesIfStillPending(a,Date.now()+1e4),null}}function writeDynamicTreeResponseIntoCache(e,t,n,r,a,o,c){if(n.b!==(0,_appbuildid.getAppBuildId)())return void rejectRouteCacheEntry(r,e+1e4);const u=(0,_flightdatahelpers.normalizeFlightData)(n.f);if("string"==typeof u||1!==u.length)return void rejectRouteCacheEntry(r,e+1e4);const l=u[0];if(!l.isRootRender)return void rejectRouteCacheEntry(r,e+1e4);const s=l.tree,i=t.headers.get(_approuterheaders.NEXT_ROUTER_STALE_TIME_HEADER),h=null!==i?1e3*parseInt(i,10):_prefetchcacheutils.STATIC_STALETIME_MS;fulfillRouteCacheEntry(r,convertRootFlightRouterStateToRouteTree(s),l.head,l.isHeadPartial,e+h,a,o,c)}function rejectSegmentEntriesIfStillPending(e,t){const n=[];for(const r of e.values())1===r.status?rejectSegmentCacheEntry(r,t):2===r.status&&n.push(r);return n}function writeDynamicRenderResponseIntoCache(e,t,n,r,a){if(n.b!==(0,_appbuildid.getAppBuildId)())return rejectSegmentEntriesIfStillPending(a,e+1e4),null;const o=(0,_flightdatahelpers.normalizeFlightData)(n.f);if("string"==typeof o)return null;for(const n of o){const o=n.seedData;if(null!==o){const c=n.segmentPath;let u=_segmentvalueencoding.ROOT_SEGMENT_KEY;for(let e=0;e<c.length;e+=2){const t=c[e],n=c[e+1];u=(0,_segmentvalueencoding.encodeChildSegmentKey)(u,t,(0,_segmentvalueencoding.encodeSegment)(n))}const l=t.headers.get(_approuterheaders.NEXT_ROUTER_STALE_TIME_HEADER);writeSeedDataIntoCache(e,r,e+(null!==l?1e3*parseInt(l,10):_prefetchcacheutils.STATIC_STALETIME_MS),o,u,a)}}return rejectSegmentEntriesIfStillPending(a,e+1e4)}function writeSeedDataIntoCache(e,t,n,r,a,o){const c=r[1],u=r[3],l=null===c,s=o.get(a);if(void 0!==s)fulfillSegmentCacheEntry(s,c,u,n,l);else{const r=readOrCreateSegmentCacheEntry(e,t,a);if(0===r.status){fulfillSegmentCacheEntry(r,c,u,n,l)}else{upsertSegmentEntry(e,a,fulfillSegmentCacheEntry(createDetachedSegmentCacheEntry(n),c,u,n,l))}}const i=r[2];if(null!==i)for(const r in i){const c=i[r];if(null!==c){const u=c[0];writeSeedDataIntoCache(e,t,n,c,(0,_segmentvalueencoding.encodeChildSegmentKey)(a,r,(0,_segmentvalueencoding.encodeSegment)(u)),o)}}}async function fetchSegmentPrefetchResponse(e,t,n){const r={[_approuterheaders.RSC_HEADER]:"1",[_approuterheaders.NEXT_ROUTER_PREFETCH_HEADER]:"1",[_approuterheaders.NEXT_ROUTER_SEGMENT_PREFETCH_HEADER]:t};return null!==n&&(r[_approuterheaders.NEXT_URL]=n),fetchPrefetchResponse(e,r)}async function fetchPrefetchResponse(e,t){const n="low",r=await(0,_fetchserverresponse.createFetch)(new URL(e),t,n),a=r.headers.get("content-type"),o=a&&a.startsWith(_approuterheaders.RSC_CONTENT_TYPE_HEADER);return r.ok&&o?r:null}function createPrefetchResponseStream(e,t,n){let r=0;const a=e.getReader();return new ReadableStream({async pull(e){for(;;){const{done:o,value:c}=await a.read();if(o)return void t();e.enqueue(c),r+=c.byteLength,n(r)}}})}function createPromiseWithResolvers(){let e,t;const n=new Promise(((n,r)=>{e=n,t=r}));return{resolve:e,reject:t,promise:n}}("function"==typeof exports.default||"object"==typeof exports.default&&null!==exports.default)&&void 0===exports.default.__esModule&&(Object.defineProperty(exports.default,"__esModule",{value:!0}),Object.assign(exports.default,exports),module.exports=exports.default);