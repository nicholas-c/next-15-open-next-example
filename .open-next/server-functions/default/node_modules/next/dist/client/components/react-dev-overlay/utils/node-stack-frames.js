"use strict";function _export(e,r){for(var t in r)Object.defineProperty(e,t,{enumerable:!0,get:r[t]})}Object.defineProperty(exports,"__esModule",{value:!0}),_export(exports,{getFilesystemFrame:function(){return getFilesystemFrame},getServerError:function(){return getServerError}});const _stacktraceparser=require("next/dist/compiled/stacktrace-parser"),_errorsource=require("../../../../shared/lib/error-source");function getFilesystemFrame(e){const r={...e};return"string"==typeof r.file&&(r.file.startsWith("/")||/^[a-z]:\\/i.test(r.file)||r.file.startsWith("\\\\"))&&(r.file="file://"+r.file),r}function getServerError(e,r){if("TurbopackInternalError"===e.name){const e=Object.defineProperty(new Error("An unexpected Turbopack error occurred. Please see the output of `next dev` for more details."),"__NEXT_ERROR_CODE",{value:"E167",enumerable:!1,configurable:!0});return(0,_errorsource.decorateServerError)(e,r),e}let t;try{throw Object.defineProperty(new Error(e.message),"__NEXT_ERROR_CODE",{value:"E394",enumerable:!1,configurable:!0})}catch(e){t=e}t.name=e.name;try{t.stack=t.toString()+"\n"+(0,_stacktraceparser.parse)(e.stack).map(getFilesystemFrame).map((e=>{let r="    at "+e.methodName;if(e.file){let t=e.file;e.lineNumber&&(t+=":"+e.lineNumber,e.column&&(t+=":"+e.column)),r+=" ("+t+")"}return r})).join("\n")}catch(r){t.stack=e.stack}return(0,_errorsource.decorateServerError)(t,r),t}("function"==typeof exports.default||"object"==typeof exports.default&&null!==exports.default)&&void 0===exports.default.__esModule&&(Object.defineProperty(exports.default,"__esModule",{value:!0}),Object.assign(exports.default,exports),module.exports=exports.default);