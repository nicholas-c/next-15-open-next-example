"use strict";function _export(e,t){for(var a in t)Object.defineProperty(e,a,{enumerable:!0,get:t[a]})}Object.defineProperty(exports,"__esModule",{value:!0}),_export(exports,{addSearchParamsToPageSegments:function(){return addSearchParamsToPageSegments},handleAliasedPrefetchEntry:function(){return handleAliasedPrefetchEntry}});const _segment=require("../../../shared/lib/segment"),_approuter=require("../app-router"),_applyrouterstatepatchtotree=require("./apply-router-state-patch-to-tree"),_createhreffromurl=require("./create-href-from-url"),_createroutercachekey=require("./create-router-cache-key"),_fillcachewithnewsubtreedata=require("./fill-cache-with-new-subtree-data"),_handlemutable=require("./handle-mutable");function handleAliasedPrefetchEntry(e,t,a,r){let n=e.tree,l=e.cache;const o=(0,_createhreffromurl.createHrefFromUrl)(a);let s;for(const e of t){if(!hasLoadingComponentInSeedData(e.seedData))continue;let t=e.tree;t=addSearchParamsToPageSegments(t,Object.fromEntries(a.searchParams));const{seedData:r,isRootRender:c,pathToSegment:u}=e,i=["",...u];t=addSearchParamsToPageSegments(t,Object.fromEntries(a.searchParams));let d=(0,_applyrouterstatepatchtotree.applyRouterStatePatchToTree)(i,n,t,o);const h=(0,_approuter.createEmptyCacheNode)();if(c&&r){const e=r[1],a=r[3];h.loading=a,h.rsc=e,fillNewTreeWithOnlyLoadingSegments(h,l,t,r)}else h.rsc=l.rsc,h.prefetchRsc=l.prefetchRsc,h.loading=l.loading,h.parallelRoutes=new Map(l.parallelRoutes),(0,_fillcachewithnewsubtreedata.fillCacheWithNewSubTreeDataButOnlyLoading)(h,l,e);d&&(n=d,l=h,s=!0)}return!!s&&(r.patchedTree=n,r.cache=l,r.canonicalUrl=o,r.hashFragment=a.hash,(0,_handlemutable.handleMutable)(e,r))}function hasLoadingComponentInSeedData(e){if(!e)return!1;const t=e[2];if(e[3])return!0;for(const e in t)if(hasLoadingComponentInSeedData(t[e]))return!0;return!1}function fillNewTreeWithOnlyLoadingSegments(e,t,a,r){if(!(0===Object.keys(a[1]).length))for(const n in a[1]){const l=a[1][n],o=l[0],s=(0,_createroutercachekey.createRouterCacheKey)(o),c=null!==r&&void 0!==r[2][n]?r[2][n]:null;let u;if(null!==c){const e=c[1],t=c[3];u={lazyData:null,rsc:o.includes(_segment.PAGE_SEGMENT_KEY)?null:e,prefetchRsc:null,head:null,prefetchHead:null,parallelRoutes:new Map,loading:t}}else u={lazyData:null,rsc:null,prefetchRsc:null,head:null,prefetchHead:null,parallelRoutes:new Map,loading:null};const i=e.parallelRoutes.get(n);i?i.set(s,u):e.parallelRoutes.set(n,new Map([[s,u]])),fillNewTreeWithOnlyLoadingSegments(u,t,l,c)}}function addSearchParamsToPageSegments(e,t){const[a,r,...n]=e;if(a.includes(_segment.PAGE_SEGMENT_KEY)){return[(0,_segment.addSearchParamsIfPageSegment)(a,t),r,...n]}const l={};for(const[e,a]of Object.entries(r))l[e]=addSearchParamsToPageSegments(a,t);return[a,l,...n]}("function"==typeof exports.default||"object"==typeof exports.default&&null!==exports.default)&&void 0===exports.default.__esModule&&(Object.defineProperty(exports.default,"__esModule",{value:!0}),Object.assign(exports.default,exports),module.exports=exports.default);