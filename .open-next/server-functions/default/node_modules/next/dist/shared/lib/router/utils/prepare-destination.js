"use strict";function _export(e,t){for(var r in t)Object.defineProperty(e,r,{enumerable:!0,get:t[r]})}Object.defineProperty(exports,"__esModule",{value:!0}),_export(exports,{compileNonPath:function(){return compileNonPath},matchHas:function(){return matchHas},parseDestination:function(){return parseDestination},prepareDestination:function(){return prepareDestination}});const _pathtoregexp=require("next/dist/compiled/path-to-regexp"),_escaperegexp=require("../../escape-regexp"),_parseurl=require("./parse-url"),_interceptionroutes=require("../../../../server/lib/interception-routes"),_approuterheaders=require("../../../../client/components/app-router-headers"),_getcookieparser=require("../../../../server/api-utils/get-cookie-parser");function getSafeParamName(e){let t="";for(let r=0;r<e.length;r++){const a=e.charCodeAt(r);(a>64&&a<91||a>96&&a<123)&&(t+=e[r])}return t}function escapeSegment(e,t){return e.replace(new RegExp(":"+(0,_escaperegexp.escapeStringRegexp)(t),"g"),"__ESC_COLON_"+t)}function unescapeSegments(e){return e.replace(/__ESC_COLON_/gi,":")}function matchHas(e,t,r,a){void 0===r&&(r=[]),void 0===a&&(a=[]);const n={},s=r=>{let a,s=r.key;switch(r.type){case"header":s=s.toLowerCase(),a=e.headers[s];break;case"cookie":if("cookies"in e)a=e.cookies[r.key];else{a=(0,_getcookieparser.getCookieParser)(e.headers)()[r.key]}break;case"query":a=t[s];break;case"host":{const{host:t}=(null==e?void 0:e.headers)||{};a=null==t?void 0:t.split(":",1)[0].toLowerCase();break}}if(!r.value&&a)return n[getSafeParamName(s)]=a,!0;if(a){const e=new RegExp("^"+r.value+"$"),t=Array.isArray(a)?a.slice(-1)[0].match(e):a.match(e);if(t)return Array.isArray(t)&&(t.groups?Object.keys(t.groups).forEach((e=>{n[e]=t.groups[e]})):"host"===r.type&&t[0]&&(n.host=t[0])),!0}return!1};return!(!r.every((e=>s(e)))||a.some((e=>s(e))))&&n}function compileNonPath(e,t){if(!e.includes(":"))return e;for(const r of Object.keys(t))e.includes(":"+r)&&(e=e.replace(new RegExp(":"+r+"\\*","g"),":"+r+"--ESCAPED_PARAM_ASTERISKS").replace(new RegExp(":"+r+"\\?","g"),":"+r+"--ESCAPED_PARAM_QUESTION").replace(new RegExp(":"+r+"\\+","g"),":"+r+"--ESCAPED_PARAM_PLUS").replace(new RegExp(":"+r+"(?!\\w)","g"),"--ESCAPED_PARAM_COLON"+r));return e=e.replace(/(:|\*|\?|\+|\(|\)|\{|\})/g,"\\$1").replace(/--ESCAPED_PARAM_PLUS/g,"+").replace(/--ESCAPED_PARAM_COLON/g,":").replace(/--ESCAPED_PARAM_QUESTION/g,"?").replace(/--ESCAPED_PARAM_ASTERISKS/g,"*"),(0,_pathtoregexp.compile)("/"+e,{validate:!1})(t).slice(1)}function parseDestination(e){let t=e.destination;for(const r of Object.keys({...e.params,...e.query}))r&&(t=escapeSegment(t,r));const r=(0,_parseurl.parseUrl)(t);let a=r.pathname;a&&(a=unescapeSegments(a));let n=r.href;n&&(n=unescapeSegments(n));let s=r.hostname;s&&(s=unescapeSegments(s));let o=r.hash;return o&&(o=unescapeSegments(o)),{...r,pathname:a,hostname:s,href:n,hash:o}}function prepareDestination(e){const t=Object.assign({},e.query);delete t[_approuterheaders.NEXT_RSC_UNION_QUERY];const r=parseDestination(e),{hostname:a,query:n}=r;let s=r.pathname;r.hash&&(s=""+s+r.hash);const o=[],p=[];(0,_pathtoregexp.pathToRegexp)(s,p);for(const e of p)o.push(e.name);if(a){const e=[];(0,_pathtoregexp.pathToRegexp)(a,e);for(const t of e)o.push(t.name)}const i=(0,_pathtoregexp.compile)(s,{validate:!1});let c;a&&(c=(0,_pathtoregexp.compile)(a,{validate:!1}));for(const[t,r]of Object.entries(n))Array.isArray(r)?n[t]=r.map((t=>compileNonPath(unescapeSegments(t),e.params))):"string"==typeof r&&(n[t]=compileNonPath(unescapeSegments(r),e.params));let u,l=Object.keys(e.params).filter((e=>"nextInternalLocale"!==e));if(e.appendParamsToQuery&&!l.some((e=>o.includes(e))))for(const t of l)t in n||(n[t]=e.params[t]);if((0,_interceptionroutes.isInterceptionRouteAppPath)(s))for(const t of s.split("/")){const r=_interceptionroutes.INTERCEPTION_ROUTE_MARKERS.find((e=>t.startsWith(e)));if(r){"(..)(..)"===r?(e.params[0]="(..)",e.params[1]="(..)"):e.params[0]=r;break}}try{u=i(e.params);const[t,a]=u.split("#",2);c&&(r.hostname=c(e.params)),r.pathname=t,r.hash=(a?"#":"")+(a||""),delete r.search}catch(e){if(e.message.match(/Expected .*? to not repeat, but got an array/))throw Object.defineProperty(new Error("To use a multi-match in the destination you must add `*` at the end of the param name to signify it should repeat. https://nextjs.org/docs/messages/invalid-multi-match"),"__NEXT_ERROR_CODE",{value:"E329",enumerable:!1,configurable:!0});throw e}return r.query={...t,...r.query},{newUrl:u,destQuery:n,parsedDestination:r}}