"use strict";function _export(r,e){for(var o in e)Object.defineProperty(r,o,{enumerable:!0,get:e[o]})}Object.defineProperty(exports,"__esModule",{value:!0}),_export(exports,{formatZodError:function(){return formatZodError},normalizeZodErrors:function(){return normalizeZodErrors},reportZodError:function(){return reportZodError}});const _interop_require_wildcard=require("@swc/helpers/_/_interop_require_wildcard"),_zod=require("next/dist/compiled/zod"),_zodvalidationerror=require("next/dist/compiled/zod-validation-error"),_log=_interop_require_wildcard._(require("../../build/output/log"));function processZodErrorMessage(r){let e,o=r.message;if(r.path.length>0)if(1===r.path.length){const o=r.path[0];e="number"==typeof o?"index "+o:'"'+o+'"'}else e='"'+r.path.reduce(((r,e)=>{if("number"==typeof e)return r+"["+e+"]";if(e.includes('"'))return r+'["'+e.replaceAll('"','\\"')+'"]';return r+(0===r.length?"":".")+e}),"")+'"';else e="";return"invalid_type"===r.code&&r.received===_zod.ZodParsedType.undefined?e+" is missing, expected "+r.expected:"invalid_enum_value"===r.code?"Expected "+_zod.util.joinValues(r.options)+", received '"+r.received+"' at "+e:o+(e?" at "+e:"")}function normalizeZodErrors(r){return r.issues.flatMap((r=>{const e=[{issue:r,message:processZodErrorMessage(r)}];if("unionErrors"in r)for(const o of r.unionErrors)e.push(...normalizeZodErrors(o));return e}))}function formatZodError(r,e){return Object.defineProperty(new Error((0,_zodvalidationerror.fromZodError)(e,{prefix:r}).toString()),"__NEXT_ERROR_CODE",{value:"E394",enumerable:!1,configurable:!0})}function reportZodError(r,e){_log.error(formatZodError(r,e).message)}