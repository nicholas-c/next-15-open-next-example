"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"Telemetry",{enumerable:!0,get:function(){return Telemetry}});const _picocolors=require("../lib/picocolors"),_conf=_interop_require_default(require("next/dist/compiled/conf")),_crypto=require("crypto"),_isdocker=_interop_require_default(require("next/dist/compiled/is-docker")),_path=_interop_require_default(require("path")),_anonymousmeta=require("./anonymous-meta"),_ciinfo=_interop_require_wildcard(require("../server/ci-info")),_posttelemetrypayload=require("./post-telemetry-payload"),_projectid=require("./project-id"),_ponyfill=require("next/dist/compiled/@edge-runtime/ponyfill"),_fs=_interop_require_default(require("fs"));function _interop_require_default(e){return e&&e.__esModule?e:{default:e}}function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,r=new WeakMap;return(_getRequireWildcardCache=function(e){return e?r:t})(e)}function _interop_require_wildcard(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var r=_getRequireWildcardCache(t);if(r&&r.has(e))return r.get(e);var o={__proto__:null},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var s in e)if("default"!==s&&Object.prototype.hasOwnProperty.call(e,s)){var n=i?Object.getOwnPropertyDescriptor(e,s):null;n&&(n.get||n.set)?Object.defineProperty(o,s,n):o[s]=e[s]}return o.default=e,r&&r.set(e,o),o}const TELEMETRY_KEY_ENABLED="telemetry.enabled",TELEMETRY_KEY_NOTIFY_DATE="telemetry.notifiedAt",TELEMETRY_KEY_ID="telemetry.anonymousId",TELEMETRY_KEY_SALT="telemetry.salt";function getStorageDirectory(e){if(_ciinfo.isCI||(0,_isdocker.default)())return _path.default.join(e,"cache")}class Telemetry{constructor({distDir:e}){this.notify=()=>{!this.isDisabled&&this.conf&&(this.conf.get(TELEMETRY_KEY_NOTIFY_DATE,"")||(this.conf.set(TELEMETRY_KEY_NOTIFY_DATE,Date.now().toString()),console.log(`${(0,_picocolors.magenta)((0,_picocolors.bold)("Attention"))}: Next.js now collects completely anonymous telemetry regarding usage.`),console.log("This information is used to shape Next.js' roadmap and prioritize features."),console.log("You can learn more, including how to opt-out if you'd not like to participate in this anonymous program, by visiting the following URL:"),console.log((0,_picocolors.cyan)("https://nextjs.org/telemetry")),console.log()))},this.setEnabled=e=>{const t=!!e;return this.conf&&this.conf.set(TELEMETRY_KEY_ENABLED,t),this.conf&&this.conf.path},this.oneWayHash=e=>{const t=(0,_crypto.createHash)("sha256");return t.update(this.salt),t.update(e),t.digest("hex")},this.record=(e,t)=>{const r=(t?new Promise((t=>t({isFulfilled:!0,isRejected:!1,value:e}))):this.submitRecord(e)).then((e=>({isFulfilled:!0,isRejected:!1,value:e}))).catch((e=>({isFulfilled:!1,isRejected:!0,reason:e}))).then((e=>(t||this.queue.delete(r),e)));return r._events=Array.isArray(e)?e:[e],r._controller=r._controller,this.queue.add(r),r},this.flush=async()=>Promise.all(this.queue).catch((()=>null)),this.flushDetached=(e,t)=>{const r=[];this.queue.forEach((e=>{try{var t;null==(t=e._controller)||t.abort(),r.push(...e._events)}catch(e){}})),_fs.default.mkdirSync(this.distDir,{recursive:!0}),_fs.default.writeFileSync(_path.default.join(this.distDir,"_events.json"),JSON.stringify(r));const o=require("child_process");(this.NEXT_TELEMETRY_DEBUG?o.spawnSync:o.spawn)(process.execPath,[require.resolve("./detached-flush"),e,t],{detached:!this.NEXT_TELEMETRY_DEBUG,windowsHide:!0,shell:!1,...this.NEXT_TELEMETRY_DEBUG?{stdio:"inherit"}:{}})},this.submitRecord=async e=>{let t;if(t=Array.isArray(e)?e:[e],t.length<1)return Promise.resolve();if(this.NEXT_TELEMETRY_DEBUG)return t.forEach((({eventName:e,payload:t})=>console.error("[telemetry] "+JSON.stringify({eventName:e,payload:t},null,2)))),Promise.resolve();if(this.isDisabled)return Promise.resolve();const r=new _ponyfill.AbortController,o=(0,_posttelemetrypayload.postNextTelemetryPayload)({context:{anonymousId:this.anonymousId,projectId:await this.getProjectId(),sessionId:this.sessionId},meta:(0,_anonymousmeta.getAnonymousMeta)(),events:t.map((({eventName:e,payload:t})=>({eventName:e,fields:t})))},r.signal);return o._controller=r,o};const{NEXT_TELEMETRY_DISABLED:t,NEXT_TELEMETRY_DEBUG:r}=process.env;this.NEXT_TELEMETRY_DISABLED=t,this.NEXT_TELEMETRY_DEBUG=r,this.distDir=e;const o=getStorageDirectory(e);try{this.conf=new _conf.default({projectName:"nextjs",cwd:o})}catch(e){this.conf=null}this.sessionId=(0,_crypto.randomBytes)(32).toString("hex"),this.queue=new Set,this.notify()}get anonymousId(){const e=this.conf&&this.conf.get(TELEMETRY_KEY_ID);if(e)return e;const t=(0,_crypto.randomBytes)(32).toString("hex");return this.conf&&this.conf.set(TELEMETRY_KEY_ID,t),t}get salt(){const e=this.conf&&this.conf.get(TELEMETRY_KEY_SALT);if(e)return e;const t=(0,_crypto.randomBytes)(16).toString("hex");return this.conf&&this.conf.set(TELEMETRY_KEY_SALT,t),t}get isDisabled(){return!(!this.NEXT_TELEMETRY_DISABLED&&this.conf)||!1===this.conf.get(TELEMETRY_KEY_ENABLED,!0)}get isEnabled(){return!this.NEXT_TELEMETRY_DISABLED&&!!this.conf&&!1!==this.conf.get(TELEMETRY_KEY_ENABLED,!0)}async getProjectId(){return this.loadProjectId=this.loadProjectId||(0,_projectid.getRawProjectId)(),this.oneWayHash(await this.loadProjectId)}}