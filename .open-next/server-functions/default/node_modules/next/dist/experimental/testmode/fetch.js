"use strict";function _export(e,t){for(var r in t)Object.defineProperty(e,r,{enumerable:!0,get:t[r]})}Object.defineProperty(exports,"__esModule",{value:!0}),_export(exports,{handleFetch:function(){return handleFetch},interceptFetch:function(){return interceptFetch},reader:function(){return reader}});const _context=require("./context"),reader={url:e=>e.url,header:(e,t)=>e.headers.get(t)};function getTestStack(){let e=((new Error).stack??"").split("\n");for(let t=1;t<e.length;t++)if(e[t].length>0){e=e.slice(t);break}return e=e.filter((e=>!e.includes("/next/dist/"))),e=e.slice(0,5),e=e.map((e=>e.replace("webpack-internal:///(rsc)/","").trim())),e.join("    ")}async function buildProxyRequest(e,t){const{url:r,method:n,headers:o,body:a,cache:c,credentials:s,integrity:i,mode:u,redirect:l,referrer:d,referrerPolicy:f}=t;return{testData:e,api:"fetch",request:{url:r,method:n,headers:[...Array.from(o),["next-test-stack",getTestStack()]],body:a?Buffer.from(await t.arrayBuffer()).toString("base64"):null,cache:c,credentials:s,integrity:i,mode:u,redirect:l,referrer:d,referrerPolicy:f}}}function buildResponse(e){const{status:t,headers:r,body:n}=e.response;return new Response(n?Buffer.from(n,"base64"):null,{status:t,headers:new Headers(r)})}async function handleFetch(e,t){const r=(0,_context.getTestReqInfo)(t,reader);if(!r)return e(t);const{testData:n,proxyPort:o}=r,a=await buildProxyRequest(n,t),c=await e(`http://localhost:${o}`,{method:"POST",body:JSON.stringify(a),next:{internal:!0}});if(!c.ok)throw Object.defineProperty(new Error(`Proxy request failed: ${c.status}`),"__NEXT_ERROR_CODE",{value:"E146",enumerable:!1,configurable:!0});const s=await c.json(),{api:i}=s;switch(i){case"continue":return e(t);case"abort":case"unhandled":throw Object.defineProperty(new Error(`Proxy request aborted [${t.method} ${t.url}]`),"__NEXT_ERROR_CODE",{value:"E145",enumerable:!1,configurable:!0})}return buildResponse(s)}function interceptFetch(e){return global.fetch=function(t,r){var n;return(null==r||null==(n=r.next)?void 0:n.internal)?e(t,r):handleFetch(e,new Request(t,r))},()=>{global.fetch=e}}