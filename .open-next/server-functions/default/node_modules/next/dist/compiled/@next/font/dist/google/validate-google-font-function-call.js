"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.validateGoogleFontFunctionCall=validateGoogleFontFunctionCall;const constants_1=require("../constants"),format_available_values_1=require("../format-available-values"),next_font_error_1=require("../next-font-error"),google_fonts_metadata_1=require("./google-fonts-metadata");function validateGoogleFontFunctionCall(e,a){let{weight:t,style:o,preload:n=!0,display:r="swap",axes:l,fallback:s,adjustFontFallback:i=!0,variable:_,subsets:f}=a||{};""===e&&(0,next_font_error_1.nextFontError)("next/font/google has no default export");const u=e.replace(/_/g," "),b=google_fonts_metadata_1.googleFontsMetadata[u];b||(0,next_font_error_1.nextFontError)(`Unknown font \`${u}\``);const v=b.subsets;0===v.length?n=!1:n&&(f||(0,next_font_error_1.nextFontError)(`Preload is enabled but no subsets were specified for font \`${u}\`. Please specify subsets or disable preloading if your intended subset can't be preloaded.\nAvailable subsets: ${(0,format_available_values_1.formatAvailableValues)(v)}\n\nRead more: https://nextjs.org/docs/messages/google-fonts-missing-subsets`),f.forEach((e=>{v.includes(e)||(0,next_font_error_1.nextFontError)(`Unknown subset \`${e}\` for font \`${u}\`.\nAvailable subsets: ${(0,format_available_values_1.formatAvailableValues)(v)}`)})));const d=b.weights,c=b.styles,g=t?[...new Set(Array.isArray(t)?t:[t])]:[],x=o?[...new Set(Array.isArray(o)?o:[o])]:[];return 0===g.length&&(d.includes("variable")?g.push("variable"):(0,next_font_error_1.nextFontError)(`Missing weight for font \`${u}\`.\nAvailable weights: ${(0,format_available_values_1.formatAvailableValues)(d)}`)),g.length>1&&g.includes("variable")&&(0,next_font_error_1.nextFontError)(`Unexpected \`variable\` in weight array for font \`${u}\`. You only need \`variable\`, it includes all available weights.`),g.forEach((e=>{d.includes(e)||(0,next_font_error_1.nextFontError)(`Unknown weight \`${e}\` for font \`${u}\`.\nAvailable weights: ${(0,format_available_values_1.formatAvailableValues)(d)}`)})),0===x.length&&(1===c.length?x.push(c[0]):x.push("normal")),x.forEach((e=>{c.includes(e)||(0,next_font_error_1.nextFontError)(`Unknown style \`${e}\` for font \`${u}\`.\nAvailable styles: ${(0,format_available_values_1.formatAvailableValues)(c)}`)})),constants_1.allowedDisplayValues.includes(r)||(0,next_font_error_1.nextFontError)(`Invalid display value \`${r}\` for font \`${u}\`.\nAvailable display values: ${(0,format_available_values_1.formatAvailableValues)(constants_1.allowedDisplayValues)}`),l&&(d.includes("variable")||(0,next_font_error_1.nextFontError)("Axes can only be defined for variable fonts."),"variable"!==g[0]&&(0,next_font_error_1.nextFontError)("Axes can only be defined for variable fonts when the weight property is nonexistent or set to `variable`.")),{fontFamily:u,weights:g,styles:x,display:r,preload:n,selectedVariableAxes:l,fallback:s,adjustFontFallback:i,variable:_,subsets:f}}