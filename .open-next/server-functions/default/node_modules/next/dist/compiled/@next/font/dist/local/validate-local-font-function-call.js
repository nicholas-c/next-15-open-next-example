"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.validateLocalFontFunctionCall=validateLocalFontFunctionCall;const constants_1=require("../constants"),format_available_values_1=require("../format-available-values"),next_font_error_1=require("../next-font-error"),extToFormat={woff:"woff",woff2:"woff2",ttf:"truetype",otf:"opentype",eot:"embedded-opentype"};function validateLocalFontFunctionCall(t,e){t&&(0,next_font_error_1.nextFontError)("next/font/local has no named exports");let{src:r,display:a="swap",weight:o,style:n,fallback:l,preload:s=!0,variable:i,adjustFontFallback:f,declarations:c}=e||{};return constants_1.allowedDisplayValues.includes(a)||(0,next_font_error_1.nextFontError)(`Invalid display value \`${a}\`.\nAvailable display values: ${(0,format_available_values_1.formatAvailableValues)(constants_1.allowedDisplayValues)}`),r||(0,next_font_error_1.nextFontError)("Missing required `src` property"),Array.isArray(r)?0===r.length&&(0,next_font_error_1.nextFontError)("Unexpected empty `src` array."):r=[{path:r,weight:o,style:n}],r=r.map((t=>{var e;const r=null===(e=/\.(woff|woff2|eot|ttf|otf)$/.exec(t.path))||void 0===e?void 0:e[1];return r||(0,next_font_error_1.nextFontError)(`Unexpected file \`${t.path}\``),{...t,ext:r,format:extToFormat[r]}})),Array.isArray(c)&&c.forEach((t=>{["font-family","src","font-display","font-weight","font-style"].includes(null==t?void 0:t.prop)&&(0,next_font_error_1.nextFontError)(`Invalid declaration prop: \`${t.prop}\``)})),{src:r,display:a,weight:o,style:n,fallback:l,preload:s,variable:i,adjustFontFallback:f,declarations:c}}