"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getFallbackMetricsFromFontFile=getFallbackMetricsFromFontFile;const DEFAULT_SANS_SERIF_FONT={name:"Arial",azAvgWidth:934.5116279069767,unitsPerEm:2048},DEFAULT_SERIF_FONT={name:"Times New Roman",azAvgWidth:854.3953488372093,unitsPerEm:2048};function calcAverageWidth(e){try{const r="aaabcdeeeefghiijklmnnoopqrrssttuvwxyz      ";if(!e.glyphsForString(r).flatMap((e=>e.codePoints)).every((r=>e.hasGlyphForCodePoint(r))))return;const t=e.glyphsForString(r).map((e=>e.advanceWidth));return t.reduce(((e,r)=>e+r),0)/t.length}catch{return}}function formatOverrideValue(e){return Math.abs(100*e).toFixed(2)+"%"}function getFallbackMetricsFromFontFile(e,r="serif"){const t="serif"===r?DEFAULT_SERIF_FONT:DEFAULT_SANS_SERIF_FONT,a=calcAverageWidth(e),{ascent:i,descent:n,lineGap:o,unitsPerEm:s}=e,c=t.azAvgWidth/t.unitsPerEm;let l=a?a/s/c:1;return{ascentOverride:formatOverrideValue(i/(s*l)),descentOverride:formatOverrideValue(n/(s*l)),lineGapOverride:formatOverrideValue(o/(s*l)),fallbackFont:t.name,sizeAdjust:formatOverrideValue(l)}}