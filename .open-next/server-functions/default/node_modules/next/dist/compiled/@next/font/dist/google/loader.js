"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,o,n){void 0===n&&(n=o);var r=Object.getOwnPropertyDescriptor(t,o);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[o]}}),Object.defineProperty(e,n,r)}:function(e,t,o,n){void 0===n&&(n=o),e[n]=t[o]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(){var e=function(t){return e=Object.getOwnPropertyNames||function(e){var t=[];for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[t.length]=o);return t},e(t)};return function(t){if(t&&t.__esModule)return t;var o={};if(null!=t)for(var n=e(t),r=0;r<n.length;r++)"default"!==n[r]&&__createBinding(o,t,n[r]);return __setModuleDefault(o,t),o}}();Object.defineProperty(exports,"__esModule",{value:!0});const Log=__importStar(require("next/dist/build/output/log")),validate_google_font_function_call_1=require("./validate-google-font-function-call"),get_font_axes_1=require("./get-font-axes"),get_google_fonts_url_1=require("./get-google-fonts-url"),next_font_error_1=require("../next-font-error"),find_font_files_in_css_1=require("./find-font-files-in-css"),get_fallback_font_override_metrics_1=require("./get-fallback-font-override-metrics"),fetch_css_from_google_fonts_1=require("./fetch-css-from-google-fonts"),fetch_font_file_1=require("./fetch-font-file"),cssCache=new Map,fontCache=new Map,reHasRegExp=/[|\\{}()[\]^$+*?.-]/,reReplaceRegExp=/[|\\{}()[\]^$+*?.-]/g;function escapeStringRegexp(e){return reHasRegExp.test(e)?e.replace(reReplaceRegExp,"\\$&"):e}const nextFontGoogleFontLoader=async({functionName:e,data:t,emitFontFile:o,isDev:n,isServer:r})=>{var l;const{fontFamily:a,weights:i,styles:s,display:c,preload:f,selectedVariableAxes:_,fallback:g,adjustFontFallback:u,variable:d,subsets:F}=(0,validate_google_font_function_call_1.validateGoogleFontFunctionCall)(e,t[0]),h=(0,get_font_axes_1.getFontAxes)(a,i,s,_),p=(0,get_google_fonts_url_1.getGoogleFontsUrl)(a,h,c),v=u?(0,get_fallback_font_override_metrics_1.getFallbackFontOverrideMetrics)(a):void 0,b={fallbackFonts:g,weight:1===i.length&&"variable"!==i[0]?i[0]:void 0,style:1===s.length?s[0]:void 0,variable:d,adjustFontFallback:v};try{const e=cssCache.has(p);let t=e?cssCache.get(p):await(0,fetch_css_from_google_fonts_1.fetchCSSFromGoogleFonts)(p,a,n).catch((e=>(console.error(e),null)));e?cssCache.delete(p):cssCache.set(p,null!=t?t:null),null==t&&(0,next_font_error_1.nextFontError)(`Failed to fetch \`${a}\` from Google Fonts.`),t=t.split("body {",1)[0];const r=(0,find_font_files_in_css_1.findFontFilesInCss)(t,f?F:void 0),l=await Promise.all(r.map((async({googleFontFileUrl:e,preloadFontFile:t})=>{const r=fontCache.has(e),l=r?fontCache.get(e):await(0,fetch_font_file_1.fetchFontFile)(e,n).catch((e=>(console.error(e),null)));r?fontCache.delete(e):fontCache.set(e,null!=l?l:null),null==l&&(0,next_font_error_1.nextFontError)(`Failed to fetch \`${a}\` from Google Fonts.`);const i=/\.(woff|woff2|eot|ttf|otf)$/.exec(e)[1];return{googleFontFileUrl:e,selfHostedFileUrl:o(l,i,t,!!v)}})));let i=t;for(const{googleFontFileUrl:e,selfHostedFileUrl:t}of l)i=i.replace(new RegExp(escapeStringRegexp(e),"g"),t);return{...b,css:i}}catch(e){if(n){r&&Log.error(`Failed to download \`${a}\` from Google Fonts. Using fallback font instead.\n\n${e.message}}`);let t=`@font-face {\n  font-family: '${a} Fallback';\n  src: local("${null!==(l=null==v?void 0:v.fallbackFont)&&void 0!==l?l:"Arial"}");`;return v&&(t+=`\n  ascent-override:${v.ascentOverride};\n  descent-override:${v.descentOverride};\n  line-gap-override:${v.lineGapOverride};\n  size-adjust:${v.sizeAdjust};`),t+="\n}",{...b,css:t}}throw e}};exports.default=nextFontGoogleFontLoader;