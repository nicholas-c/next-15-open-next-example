"use strict";function _export(e,t){for(var r in t)Object.defineProperty(e,r,{enumerable:!0,get:t[r]})}Object.defineProperty(exports,"__esModule",{value:!0}),_export(exports,{downloadNativeNextSwc:function(){return downloadNativeNextSwc},downloadWasmSwc:function(){return downloadWasmSwc}});const _fs=_interop_require_default(require("fs")),_path=_interop_require_default(require("path")),_log=_interop_require_wildcard(require("../build/output/log")),_tar=_interop_require_default(require("next/dist/compiled/tar")),_getregistry=require("./helpers/get-registry"),_getcachedirectory=require("./helpers/get-cache-directory");function _interop_require_default(e){return e&&e.__esModule?e:{default:e}}function _getRequireWildcardCache(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,r=new WeakMap;return(_getRequireWildcardCache=function(e){return e?r:t})(e)}function _interop_require_wildcard(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var r=_getRequireWildcardCache(t);if(r&&r.has(e))return r.get(e);var a={__proto__:null},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if("default"!==o&&Object.prototype.hasOwnProperty.call(e,o)){var n=i?Object.getOwnPropertyDescriptor(e,o):null;n&&(n.get||n.set)?Object.defineProperty(a,o,n):a[o]=e[o]}return a.default=e,r&&r.set(e,a),a}const{WritableStream:WritableStream}=require("node:stream/web"),MAX_VERSIONS_TO_CACHE=8;async function extractBinary(e,t,r){const a=(0,_getcachedirectory.getCacheDirectory)("next-swc",process.env.NEXT_SWC_PATH),i=()=>_tar.default.x({file:_path.default.join(a,r),cwd:e,strip:1});if(_fs.default.existsSync(_path.default.join(a,r)))_log.info(`Using cached swc package ${t}...`);else{_log.info(`Downloading swc package ${t}... to ${a}`),await _fs.default.promises.mkdir(a,{recursive:!0});const e=_path.default.join(a,`${r}.temp-${Date.now()}`),i=`${(0,_getregistry.getRegistry)()}${t}/-/${r}`;await fetch(i).then((t=>{const{ok:r,body:a}=t;if(r&&a||_log.error(`Failed to download swc package from ${i}`),!r)throw Object.defineProperty(new Error(`request failed with status ${t.status}`),"__NEXT_ERROR_CODE",{value:"E109",enumerable:!1,configurable:!0});if(!a)throw Object.defineProperty(new Error("request failed with empty body"),"__NEXT_ERROR_CODE",{value:"E143",enumerable:!1,configurable:!0});const o=_fs.default.createWriteStream(e);return a.pipeTo(new WritableStream({write:e=>new Promise(((t,r)=>o.write(e,(e=>{e?r(e):t()})))),close:()=>new Promise(((e,t)=>o.close((r=>{r?t(r):e()}))))}))})),await _fs.default.promises.access(e),await _fs.default.promises.rename(e,_path.default.join(a,r))}await i();const o=await _fs.default.promises.readdir(a);if(o.length>MAX_VERSIONS_TO_CACHE){o.sort(((e,t)=>e.length<t.length?-1:e.localeCompare(t)));for(let e=0;e++;e<o.length-MAX_VERSIONS_TO_CACHE)await _fs.default.promises.unlink(_path.default.join(a,o[e])).catch((()=>{}))}}async function downloadNativeNextSwc(e,t,r){for(const a of r){const r=`@next/swc-${a}`,i=`${r.substring(6)}-${e}.tgz`,o=_path.default.join(t,r);if(_fs.default.existsSync(o))return;await _fs.default.promises.mkdir(o,{recursive:!0}),await extractBinary(o,r,i)}}async function downloadWasmSwc(e,t,r="nodejs"){const a=`@next/swc-wasm-${r}`,i=`${a.substring(6)}-${e}.tgz`,o=_path.default.join(t,a);_fs.default.existsSync(o)||(await _fs.default.promises.mkdir(o,{recursive:!0}),await extractBinary(o,a,i))}