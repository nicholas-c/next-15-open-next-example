"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"createClientRouterFilter",{enumerable:!0,get:function(){return createClientRouterFilter}});const _bloomfilter=require("../shared/lib/bloom-filter"),_utils=require("../shared/lib/router/utils"),_removetrailingslash=require("../shared/lib/router/utils/remove-trailing-slash"),_trytoparsepath=require("./try-to-parse-path"),_interceptionroutes=require("../server/lib/interception-routes");function createClientRouterFilter(e,t,r){const o=new Set,i=new Set;for(let t of e)if((0,_utils.isDynamicRoute)(t)){(0,_interceptionroutes.isInterceptionRouteAppPath)(t)&&(t=(0,_interceptionroutes.extractInterceptionRouteInformation)(t).interceptedRoute);let e="";const r=t.split("/");for(let t=1;t<r.length;t++){const o=r[t];if(o.startsWith("["))break;e=`${e}/${o}`}e&&i.add(e)}else o.add(t);for(const e of t){const{source:t}=e,r=(0,_removetrailingslash.removeTrailingSlash)(t);let i=[];try{i=(0,_trytoparsepath.tryToParsePath)(t).tokens||[]}catch{}i.every((e=>"string"==typeof e))&&o.add(r)}const l=_bloomfilter.BloomFilter.from([...o],r),n=_bloomfilter.BloomFilter.from([...i],r);return{staticFilter:l.export(),dynamicFilter:n.export()}}