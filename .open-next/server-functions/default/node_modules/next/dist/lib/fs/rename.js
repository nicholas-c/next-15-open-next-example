"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"rename",{enumerable:!0,get:function(){return rename}});const _promises=require("node:fs/promises");async function rename(e,t,r=6e4){e!==t&&("win32"===process.platform&&"number"==typeof r?await renameWithRetry(e,t,Date.now(),r):await(0,_promises.rename)(e,t))}async function renameWithRetry(e,t,r,o,i=0){try{return await(0,_promises.rename)(e,t)}catch(n){if("EACCES"!==n.code&&"EPERM"!==n.code&&"EBUSY"!==n.code)throw n;if(Date.now()-r>=o)throw console.error(`[node.js fs] rename failed after ${i} retries with error: ${n}`),n;if(0===i){let e=!1;try{(await(0,_promises.stat)(t)).isFile()||(e=!0)}catch(e){}if(e)throw n}return await timeout(Math.min(100,10*i)),renameWithRetry(e,t,r,o,i+1)}}const timeout=e=>new Promise((t=>setTimeout(t,e)));