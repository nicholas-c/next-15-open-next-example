"use strict";function _export(e,t){for(var s in t)Object.defineProperty(e,s,{enumerable:!0,get:t[s]})}Object.defineProperty(exports,"__esModule",{value:!0}),_export(exports,{formatServerError:function(){return formatServerError},getStackWithoutErrorMessage:function(){return getStackWithoutErrorMessage}});const invalidServerComponentReactHooks=["useDeferredValue","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useReducer","useRef","useState","useSyncExternalStore","useTransition","experimental_useOptimistic","useOptimistic"];function setMessage(e,t){if(e.message=t,e.stack){const s=e.stack.split("\n");s[0]=t,e.stack=s.join("\n")}}function getStackWithoutErrorMessage(e){const t=e.stack;return t?t.replace(/^[^\n]*\n/,""):""}function formatServerError(e){if("string"==typeof(null==e?void 0:e.message))if(e.message.includes("Class extends value undefined is not a constructor or null")){const t="This might be caused by a React Class Component being rendered in a Server Component, React Class Components only works in Client Components. Read more: https://nextjs.org/docs/messages/class-component-in-server-component";if(e.message.includes(t))return;setMessage(e,`${e.message}\n\n${t}`)}else if(e.message.includes("createContext is not a function"))setMessage(e,'createContext only works in Client Components. Add the "use client" directive at the top of the file to use it. Read more: https://nextjs.org/docs/messages/context-in-server-component');else for(const t of invalidServerComponentReactHooks){if(new RegExp(`\\b${t}\\b.*is not a function`).test(e.message))return void setMessage(e,`${t} only works in Client Components. Add the "use client" directive at the top of the file to use it. Read more: https://nextjs.org/docs/messages/react-client-hook-in-server-component`)}}