"use strict";function _export(e,t){for(var r in t)Object.defineProperty(e,r,{enumerable:!0,get:t[r]})}Object.defineProperty(exports,"__esModule",{value:!0}),_export(exports,{generateInterceptionRoutesRewrites:function(){return generateInterceptionRoutesRewrites},isInterceptionRouteRewrite:function(){return isInterceptionRouteRewrite}});const _pathtoregexp=require("next/dist/compiled/path-to-regexp"),_approuterheaders=require("../client/components/app-router-headers"),_interceptionroutes=require("../server/lib/interception-routes");function toPathToRegexpPath(e){return e.replace(/\[\[?([^\]]+)\]\]?/g,((e,t)=>{const r=t.replace(/\W+/g,"_");return t.startsWith("...")?`:${t.slice(3)}*`:":"+r}))}function generateInterceptionRoutesRewrites(e,t=""){const r=[];for(const o of e)if((0,_interceptionroutes.isInterceptionRouteAppPath)(o)){const{interceptingRoute:e,interceptedRoute:n}=(0,_interceptionroutes.extractInterceptionRouteInformation)(o),i=`${"/"!==e?toPathToRegexpPath(e):""}/(.*)?`,p=toPathToRegexpPath(n),u=toPathToRegexpPath(o);let s=(0,_pathtoregexp.pathToRegexp)(i).toString().slice(2,-3);r.push({source:`${t}${p}`,destination:`${t}${u}`,has:[{type:"header",key:_approuterheaders.NEXT_URL,value:s}]})}return r}function isInterceptionRouteRewrite(e){var t,r;return(null==(r=e.has)||null==(t=r[0])?void 0:t.key)===_approuterheaders.NEXT_URL}