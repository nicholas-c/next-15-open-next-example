"use strict";function _export(e,t){for(var o in t)Object.defineProperty(e,o,{enumerable:!0,get:t[o]})}Object.defineProperty(exports,"__esModule",{value:!0}),_export(exports,{DiagnosticCategory:function(){return DiagnosticCategory},getFormattedDiagnostic:function(){return getFormattedDiagnostic}});const _picocolors=require("../picocolors"),_path=_interop_require_default(require("path"));function _interop_require_default(e){return e&&e.__esModule?e:{default:e}}var DiagnosticCategory=function(e){return e[e.Warning=0]="Warning",e[e.Error=1]="Error",e[e.Suggestion=2]="Suggestion",e[e.Message=3]="Message",e}({});function getFormattedLinkDiagnosticMessageText(e){const t=e.messageText;if("string"==typeof t&&2322===e.code){const n=t.match(/Type '"(.+)"' is not assignable to type 'RouteImpl<.+> \| UrlObject'\./)||t.match(/Type '"(.+)"' is not assignable to type 'UrlObject \| RouteImpl<.+>'\./);if(n){const[,e]=n;return`"${(0,_picocolors.bold)(e)}" is not an existing route. If it is intentional, please type it explicitly with \`as Route\`.`}if("Type 'string' is not assignable to type 'UrlObject'."===t){var o,i;const t=null==(i=e.relatedInformation)||null==(o=i[0])?void 0:o.messageText;if("string"==typeof t&&t.match(/The expected type comes from property 'href' which is declared here on type 'IntrinsicAttributes & /))return"Invalid `href` property of `Link`: the route does not exist. If it is intentional, please type it explicitly with `as Route`."}}else if("string"==typeof t&&2820===e.code){const e=t.match(/Type '"(.+)"' is not assignable to type 'RouteImpl<.+> \| UrlObject'\. Did you mean '"(.+)"'?/)||t.match(/Type '"(.+)"' is not assignable to type 'UrlObject \| RouteImpl<.+>'\. Did you mean '"(.+)"'?/);if(e){const[,t,o]=e;return`"${(0,_picocolors.bold)(t)}" is not an existing route. Did you mean "${(0,_picocolors.bold)(o)}" instead? If it is intentional, please type it explicitly with \`as Route\`.`}}}function getFormattedLayoutAndPageDiagnosticMessageText(e,t){const o="string"==typeof t.messageText?t:t.messageText,i=o.messageText;if("string"==typeof i){const n=/page\.[^.]+$/.test(e)?"Page":/route\.[^.]+$/.test(e)?"Route":"Layout";switch(o.code){case 2344:if(i.match(/typeof import\("(.+)"\)/)){let d=`${n} "${(0,_picocolors.bold)(e)}" does not match the required types of a Next.js ${n}.`;function g(e,t){if(t)for(const o of t){switch(o.code){case 2200:const t=o.messageText.match(/The types of '(.+)'/);t&&(d+="\n"+" ".repeat(2*e),d+=`"${(0,_picocolors.bold)(t[1])}" has the wrong type:`);break;case 2322:const i=o.messageText.match(/Type '(.+)' is not assignable to type '(.+)'./);i&&(d+="\n"+" ".repeat(2*e),"PageComponent"===i[2]||"LayoutComponent"===i[2]?d+=`The exported ${n} component isn't correctly typed.`:d+=`Expected "${(0,_picocolors.bold)(i[2].replace('"__invalid_negative_number__"',"number (>= 0)"))}", got "${(0,_picocolors.bold)(i[1])}".`);break;case 2326:const s=o.messageText.match(/Types of property '(.+)' are incompatible\./);d+="\n"+" ".repeat(2*e),d+=`Invalid configuration${s?` "${(0,_picocolors.bold)(s[1])}"`:""}:`;break;case 2530:const r=o.messageText.match(/Property '(.+)' is incompatible with index signature/);return void(r&&(d+="\n"+" ".repeat(2*e),d+=`"${(0,_picocolors.bold)(r[1])}" is not a valid ${n} export field.`));case 2739:const a=o.messageText.match(/Type '(.+)' is missing the following properties from type '(.+)'/);a&&("LayoutProps"!==a[1]&&"PageProps"!==a[1]||(d+="\n"+" ".repeat(2*e),d+=`Prop "${a[2]}" is incompatible with the ${n}.`));break;case 2559:const c=o.messageText.match(/Type '(.+)' has/);c&&(d+="\n"+" ".repeat(2*e),d+=`Type "${(0,_picocolors.bold)(c[1])}" isn't allowed.`);break;case 2741:const l=o.messageText.match(/Property '(.+)' is missing in type 'PageProps'/);if(l)d+="\n"+" ".repeat(2*e),d+=`Prop "${(0,_picocolors.bold)(l[1])}" will never be passed. Remove it from the component's props.`;else{const t=o.messageText.match(/Property '(.+)' is missing in type 'LayoutProps' but required in type '(.+)'/);t&&(d+="\n"+" ".repeat(2*e),d+=`Prop "${(0,_picocolors.bold)(t[1])}" is not valid for this Layout, remove it to fix.`)}}g(e+1,o.next)}}return"next"in o&&g(1,o.next),d}const s=i.match(/Type 'OmitWithTag<(.+), .+, "(.+)">' does not satisfy the constraint/);if(s){return`${n} "${(0,_picocolors.bold)(e)}" has an invalid "${(0,_picocolors.bold)(s[2])}" export:\n  Type "${(0,_picocolors.bold)(s[1])}" is not valid.`}function r(e,t){if(!t)return"";let o="";for(const i of t){if(2322===i.code){const t=i.messageText.match(/Type '(.+)' is not assignable to type '(.+)'./);t&&(o+="\n"+" ".repeat(2*e),o+=`Expected "${(0,_picocolors.bold)(t[2])}", got "${(0,_picocolors.bold)(t[1])}".`)}o+=r(e+1,i.next)}return o}const a=i.match(/Type '{ __tag__: (.+); __param_position__: "(.*)"; __param_type__: (.+); }' does not satisfy/);if(a){let u=`${n} "${(0,_picocolors.bold)(e)}" has an invalid ${a[1]} export:\n  Type "${(0,_picocolors.bold)(a[3])}" is not a valid type for the function's ${a[2]} argument.`;return"next"in o&&(u+=r(1,o.next)),u}const c=i.match(/Type '{ __tag__: "(.+)"; __return_type__: (.+); }' does not satisfy/);if(c){let m=`${n} "${(0,_picocolors.bold)(e)}" has an invalid export:\n  "${(0,_picocolors.bold)(c[2])}" is not a valid ${c[1]} return type:`;return"next"in o&&(m+=r(1,o.next)),m}break;case 2345:const l=i.match(/'typeof import\("(.+)"\)'.+Impossible<"(.+)">/);if(l){return`${n} "${(0,_picocolors.bold)(e)}" exports an invalid "${(0,_picocolors.bold)(l[2])}" field. ${n} should only export a default React component and configuration options. Learn more: https://nextjs.org/docs/messages/invalid-segment-export`}break;case 2559:const p=i.match(/Type '(.+)' has no properties in common with type '(.+)'/);if(p){return`${n} "${(0,_picocolors.bold)(e)}" contains an invalid type "${(0,_picocolors.bold)(p[1])}" as ${p[2]}.`}}}}function getAppEntrySourceFilePath(e,t){var o,i;const n=(null==(i=t.file)||null==(o=i.text.trim().match(/^\/\/ File: (.+)\n/))?void 0:o[1])||"";return _path.default.relative(e,n)}function getFormattedDiagnostic(e,t,o,i,n){var s;const r=n&&(null==(s=i.file)?void 0:s.fileName.startsWith(_path.default.join(t,o,"types")));let a="";const c=r?getAppEntrySourceFilePath(t,i):null,l=getFormattedLinkDiagnosticMessageText(i),p=!l&&r&&c?getFormattedLayoutAndPageDiagnosticMessageText(c,i):null,d=l||p||e.flattenDiagnosticMessageText(i.messageText,"\n"),g=i.category;switch(g){case 0:a+=(0,_picocolors.yellow)((0,_picocolors.bold)("Type warning"))+": ";break;case 1:a+=(0,_picocolors.red)((0,_picocolors.bold)("Type error"))+": ";break;default:a+=(0,_picocolors.cyan)((0,_picocolors.bold)(2===g?"Suggestion":"Info"))+": "}if(a+=d+"\n",!r&&i.file){const{codeFrameColumns:e}=require("next/dist/compiled/babel/code-frame"),o=i.file.getLineAndCharacterOfPosition(i.start),n=o.line+1,s=o.character+1;let r=_path.default.posix.normalize(_path.default.relative(t,i.file.fileName).replace(/\\/g,"/"));r.startsWith(".")||(r="./"+r),a=(0,_picocolors.cyan)(r)+":"+(0,_picocolors.yellow)(n.toString())+":"+(0,_picocolors.yellow)(s.toString())+"\n"+a,a+="\n"+e(i.file.getFullText(i.file.getSourceFile()),{start:{line:n,column:s}},{forceColor:!0})}else r&&c&&(a=(0,_picocolors.cyan)(c)+"\n"+a);return a}