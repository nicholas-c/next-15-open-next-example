(()=>{var e={383:e=>{"use strict";function t(e,t){const n=Array.from(e.matchAll(t));return n.length>0?n.slice(-1)[0].index:-1}function n(e,o,r){const s=t(e,/(?!(?<=\\))\$/g);if(-1===s)return e;const i=/((?!(?<=\\))\${?([\w]+)(?::-([^}\\]*))?}?)/,c=e.slice(s).match(i);if(null!=c){const[,t,s,i]=c;return n(e.replace(t,o[s]||i||r.parsed[s]||""),o,r)}return e}function o(e){return e.replace(/\\\$/g,"$")}function r(e){const t=e.ignoreProcessEnv?{}:process.env;for(const r in e.parsed){const s=Object.prototype.hasOwnProperty.call(t,r)?t[r]:e.parsed[r];e.parsed[r]=o(n(s,t,e))}for(const n in e.parsed)t[n]=e.parsed[n];return e}e.exports.j=r},234:(e,t,n)=>{const o=n(147),r=n(17),s=n(37),i=n(113),c=n(803).version,a=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/gm;function l(e){const t={};let n,o=e.toString();for(o=o.replace(/\r\n?/gm,"\n");null!=(n=a.exec(o));){const e=n[1];let o=n[2]||"";o=o.trim();const r=o[0];o=o.replace(/^(['"`])([\s\S]*)\1$/gm,"$2"),'"'===r&&(o=o.replace(/\\n/g,"\n"),o=o.replace(/\\r/g,"\r")),t[e]=o}return t}function p(e){const t=E(e),n=D.configDotenv({path:t});if(!n.parsed)throw new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`);const o=f(e).split(","),r=o.length;let s;for(let e=0;e<r;e++)try{const t=g(n,o[e].trim());s=D.decrypt(t.ciphertext,t.key);break}catch(t){if(e+1>=r)throw t}return D.parse(s)}function d(e){console.log(`[dotenv@${c}][INFO] ${e}`)}function u(e){console.log(`[dotenv@${c}][WARN] ${e}`)}function v(e){console.log(`[dotenv@${c}][DEBUG] ${e}`)}function f(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:""}function g(e,t){let n;try{n=new URL(t)}catch(e){if("ERR_INVALID_URL"===e.code)throw new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=development");throw e}const o=n.password;if(!o)throw new Error("INVALID_DOTENV_KEY: Missing key part");const r=n.searchParams.get("environment");if(!r)throw new Error("INVALID_DOTENV_KEY: Missing environment part");const s=`DOTENV_VAULT_${r.toUpperCase()}`,i=e.parsed[s];if(!i)throw new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${s} in your .env.vault file.`);return{ciphertext:i,key:o}}function E(e){let t=r.resolve(process.cwd(),".env");return e&&e.path&&e.path.length>0&&(t=e.path),t.endsWith(".vault")?t:`${t}.vault`}function h(e){return"~"===e[0]?r.join(s.homedir(),e.slice(1)):e}function m(e){d("Loading env from encrypted .env.vault");const t=D._parseVault(e);let n=process.env;return e&&null!=e.processEnv&&(n=e.processEnv),D.populate(n,t,e),{parsed:t}}function y(e){let t=r.resolve(process.cwd(),".env"),n="utf8";const s=Boolean(e&&e.debug);e&&(null!=e.path&&(t=h(e.path)),null!=e.encoding&&(n=e.encoding));try{const r=D.parse(o.readFileSync(t,{encoding:n}));let s=process.env;return e&&null!=e.processEnv&&(s=e.processEnv),D.populate(s,r,e),{parsed:r}}catch(e){return s&&v(`Failed to load ${t} ${e.message}`),{error:e}}}function _(e){const t=E(e);return 0===f(e).length?D.configDotenv(e):o.existsSync(t)?D._configVault(e):(u(`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`),D.configDotenv(e))}function b(e,t){const n=Buffer.from(t.slice(-64),"hex");let o=Buffer.from(e,"base64");const r=o.slice(0,12),s=o.slice(-16);o=o.slice(12,-16);try{const e=i.createDecipheriv("aes-256-gcm",n,r);return e.setAuthTag(s),`${e.update(o)}${e.final()}`}catch(e){const t=e instanceof RangeError,n="Invalid key length"===e.message,o="Unsupported state or unable to authenticate data"===e.message;if(t||n){throw new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)")}if(o){throw new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY")}throw console.error("Error: ",e.code),console.error("Error: ",e.message),e}}function O(e,t,n={}){const o=Boolean(n&&n.debug),r=Boolean(n&&n.override);if("object"!=typeof t)throw new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");for(const n of Object.keys(t))Object.prototype.hasOwnProperty.call(e,n)?(!0===r&&(e[n]=t[n]),o&&v(!0===r?`"${n}" is already defined and WAS overwritten`:`"${n}" is already defined and was NOT overwritten`)):e[n]=t[n]}const D={configDotenv:y,_configVault:m,_parseVault:p,config:_,decrypt:b,parse:l,populate:O};e.exports.configDotenv=D.configDotenv,e.exports._configVault=D._configVault,e.exports._parseVault=D._parseVault,e.exports.config=D.config,e.exports.decrypt=D.decrypt,e.exports.parse=D.parse,e.exports.populate=D.populate,e.exports=D},113:e=>{"use strict";e.exports=require("crypto")},147:e=>{"use strict";e.exports=require("fs")},37:e=>{"use strict";e.exports=require("os")},17:e=>{"use strict";e.exports=require("path")},803:e=>{"use strict";e.exports=JSON.parse('{"name":"dotenv","version":"16.3.1","description":"Loads environment variables from .env file","main":"lib/main.js","types":"lib/main.d.ts","exports":{".":{"types":"./lib/main.d.ts","require":"./lib/main.js","default":"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},"scripts":{"dts-check":"tsc --project tests/types/tsconfig.json","lint":"standard","lint-readme":"standard-markdown","pretest":"npm run lint && npm run dts-check","test":"tap tests/*.js --100 -Rspec","prerelease":"npm test","release":"standard-version"},"repository":{"type":"git","url":"git://github.com/motdotla/dotenv.git"},"funding":"https://github.com/motdotla/dotenv?sponsor=1","keywords":["dotenv","env",".env","environment","variables","config","settings"],"readmeFilename":"README.md","license":"BSD-2-Clause","devDependencies":{"@definitelytyped/dtslint":"^0.0.133","@types/node":"^18.11.3","decache":"^4.6.1","sinon":"^14.0.1","standard":"^17.0.0","standard-markdown":"^7.1.0","standard-version":"^9.5.0","tap":"^16.3.0","tar":"^6.1.11","typescript":"^4.8.4"},"engines":{"node":">=12"},"browser":{"fs":false}}')}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var s=t[o]={exports:{}},i=!0;try{e[o](s,s.exports,n),i=!1}finally{i&&delete t[o]}return s.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},void 0!==n&&(n.ab=__dirname+"/");var o={};(()=>{"use strict";n.r(o),n.d(o,{initialEnv:()=>i,updateInitialEnv:()=>d,processEnv:()=>v,resetEnv:()=>f,loadEnvConfig:()=>g});var e=n(147),t=(n.n(e),n(17)),r=(n.n(t),n(234)),s=(n.n(r),n(383));let i,c,a,l=[],p=[];function d(e){Object.assign(i||{},e)}function u(e){Object.keys(process.env).forEach((t=>{t.startsWith("__NEXT_PRIVATE")||void 0!==e[t]&&""!==e[t]||delete process.env[t]})),Object.entries(e).forEach((([e,t])=>{process.env[e]=t}))}function v(e,n,o=console,c=!1,a){var l;if(i||(i=Object.assign({},process.env)),!c&&(process.env.__NEXT_PROCESSED_ENV||0===e.length))return[process.env];process.env.__NEXT_PROCESSED_ENV="true";const d=Object.assign({},i),u={};for(const i of e)try{let e={};e.parsed=r.parse(i.contents),e=(0,s.j)(e),e.parsed&&!p.some((e=>e.contents===i.contents&&e.path===i.path))&&(null==a||a(i.path));for(const t of Object.keys(e.parsed||{}))void 0===u[t]&&void 0===d[t]&&(u[t]=null===(l=e.parsed)||void 0===l?void 0:l[t]);i.env=e.parsed||{}}catch(e){o.error(`Failed to load env from ${t.join(n||"",i.path)}`,e)}return[Object.assign(process.env,u),u]}function f(){i&&u(i)}function g(n,o,r=console,s=!1,d){if(i||(i=Object.assign({},process.env)),c&&!s)return{combinedEnv:c,parsedEnv:a,loadedEnvFiles:l};u(i),p=l,l=[];const f="test"===process.env.NODE_ENV?"test":o?"development":"production",g=[`.env.${f}.local`,"test"!==f&&".env.local",`.env.${f}`,".env"].filter(Boolean);for(const o of g){const s=t.join(n,o);try{const t=e.statSync(s);if(!t.isFile()&&!t.isFIFO())continue;const n=e.readFileSync(s,"utf8");l.push({path:o,contents:n,env:{}})}catch(e){"ENOENT"!==e.code&&r.error(`Failed to load env from ${o}`,e)}}return[c,a]=v(l,n,r,s,d),{combinedEnv:c,parsedEnv:a,loadedEnvFiles:l}}})(),module.exports=o})();