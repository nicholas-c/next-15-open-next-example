"use strict";let{isClean:isClean,my:my}=require("./symbols"),CssSyntaxError=require("./css-syntax-error"),Stringifier=require("./stringifier"),stringify=require("./stringify");function cloneNode(t,e){let r=new t.constructor;for(let n in t){if(!Object.prototype.hasOwnProperty.call(t,n))continue;if("proxyCache"===n)continue;let i=t[n],s=typeof i;"parent"===n&&"object"===s?e&&(r[n]=e):"source"===n?r[n]=i:Array.isArray(i)?r[n]=i.map((t=>cloneNode(t,r))):("object"===s&&null!==i&&(i=cloneNode(i)),r[n]=i)}return r}class Node{constructor(t={}){this.raws={},this[isClean]=!1,this[my]=!0;for(let e in t)if("nodes"===e){this.nodes=[];for(let r of t[e])"function"==typeof r.clone?this.append(r.clone()):this.append(r)}else this[e]=t[e]}addToError(t){if(t.postcssNode=this,t.stack&&this.source&&/\n\s{4}at /.test(t.stack)){let e=this.source;t.stack=t.stack.replace(/\n\s{4}at /,`$&${e.input.from}:${e.start.line}:${e.start.column}$&`)}return t}after(t){return this.parent.insertAfter(this,t),this}assign(t={}){for(let e in t)this[e]=t[e];return this}before(t){return this.parent.insertBefore(this,t),this}cleanRaws(t){delete this.raws.before,delete this.raws.after,t||delete this.raws.between}clone(t={}){let e=cloneNode(this);for(let r in t)e[r]=t[r];return e}cloneAfter(t={}){let e=this.clone(t);return this.parent.insertAfter(this,e),e}cloneBefore(t={}){let e=this.clone(t);return this.parent.insertBefore(this,e),e}error(t,e={}){if(this.source){let{end:r,start:n}=this.rangeBy(e);return this.source.input.error(t,{column:n.column,line:n.line},{column:r.column,line:r.line},e)}return new CssSyntaxError(t)}getProxyProcessor(){return{get:(t,e)=>"proxyOf"===e?t:"root"===e?()=>t.root().toProxy():t[e],set:(t,e,r)=>(t[e]===r||(t[e]=r,"prop"!==e&&"value"!==e&&"name"!==e&&"params"!==e&&"important"!==e&&"text"!==e||t.markDirty()),!0)}}markDirty(){if(this[isClean]){this[isClean]=!1;let t=this;for(;t=t.parent;)t[isClean]=!1}}next(){if(!this.parent)return;let t=this.parent.index(this);return this.parent.nodes[t+1]}positionBy(t,e){let r=this.source.start;if(t.index)r=this.positionInside(t.index,e);else if(t.word){let n=(e=this.toString()).indexOf(t.word);-1!==n&&(r=this.positionInside(n,e))}return r}positionInside(t,e){let r=e||this.toString(),n=this.source.start.column,i=this.source.start.line;for(let e=0;e<t;e++)"\n"===r[e]?(n=1,i+=1):n+=1;return{column:n,line:i}}prev(){if(!this.parent)return;let t=this.parent.index(this);return this.parent.nodes[t-1]}rangeBy(t){let e={column:this.source.start.column,line:this.source.start.line},r=this.source.end?{column:this.source.end.column+1,line:this.source.end.line}:{column:e.column+1,line:e.line};if(t.word){let n=this.toString(),i=n.indexOf(t.word);-1!==i&&(e=this.positionInside(i,n),r=this.positionInside(i+t.word.length,n))}else t.start?e={column:t.start.column,line:t.start.line}:t.index&&(e=this.positionInside(t.index)),t.end?r={column:t.end.column,line:t.end.line}:t.endIndex?r=this.positionInside(t.endIndex):t.index&&(r=this.positionInside(t.index+1));return(r.line<e.line||r.line===e.line&&r.column<=e.column)&&(r={column:e.column+1,line:e.line}),{end:r,start:e}}raw(t,e){return(new Stringifier).raw(this,t,e)}remove(){return this.parent&&this.parent.removeChild(this),this.parent=void 0,this}replaceWith(...t){if(this.parent){let e=this,r=!1;for(let n of t)n===this?r=!0:r?(this.parent.insertAfter(e,n),e=n):this.parent.insertBefore(e,n);r||this.remove()}return this}root(){let t=this;for(;t.parent&&"document"!==t.parent.type;)t=t.parent;return t}toJSON(t,e){let r={},n=null==e;e=e||new Map;let i=0;for(let t in this){if(!Object.prototype.hasOwnProperty.call(this,t))continue;if("parent"===t||"proxyCache"===t)continue;let n=this[t];if(Array.isArray(n))r[t]=n.map((t=>"object"==typeof t&&t.toJSON?t.toJSON(null,e):t));else if("object"==typeof n&&n.toJSON)r[t]=n.toJSON(null,e);else if("source"===t){let s=e.get(n.input);null==s&&(s=i,e.set(n.input,i),i++),r[t]={end:n.end,inputId:s,start:n.start}}else r[t]=n}return n&&(r.inputs=[...e.keys()].map((t=>t.toJSON()))),r}toProxy(){return this.proxyCache||(this.proxyCache=new Proxy(this,this.getProxyProcessor())),this.proxyCache}toString(t=stringify){t.stringify&&(t=t.stringify);let e="";return t(this,(t=>{e+=t})),e}warn(t,e,r){let n={node:this};for(let t in r)n[t]=r[t];return t.warn(e,n)}get proxyOf(){return this}}module.exports=Node,Node.default=Node;