"use strict";let pico=require("picocolors"),terminalHighlight=require("./terminal-highlight");class CssSyntaxError extends Error{constructor(e,s,t,i,r,n){super(e),this.name="CssSyntaxError",this.reason=e,r&&(this.file=r),i&&(this.source=i),n&&(this.plugin=n),void 0!==s&&void 0!==t&&("number"==typeof s?(this.line=s,this.column=t):(this.line=s.line,this.column=s.column,this.endLine=t.line,this.endColumn=t.column)),this.setMessage(),Error.captureStackTrace&&Error.captureStackTrace(this,CssSyntaxError)}setMessage(){this.message=this.plugin?this.plugin+": ":"",this.message+=this.file?this.file:"<css input>",void 0!==this.line&&(this.message+=":"+this.line+":"+this.column),this.message+=": "+this.reason}showSourceCode(e){if(!this.source)return"";let s=this.source;null==e&&(e=pico.isColorSupported),terminalHighlight&&e&&(s=terminalHighlight(s));let t,i,r=s.split(/\r?\n/),n=Math.max(this.line-3,0),l=Math.min(this.line+2,r.length),h=String(l).length;if(e){let{bold:e,gray:s,red:r}=pico.createColors(!0);t=s=>e(r(s)),i=e=>s(e)}else t=i=e=>e;return r.slice(n,l).map(((e,s)=>{let r=n+1+s,l=" "+(" "+r).slice(-h)+" | ";if(r===this.line){let s=i(l.replace(/\d/g," "))+e.slice(0,this.column-1).replace(/[^\t]/g," ");return t(">")+i(l)+e+"\n "+s+t("^")}return" "+i(l)+e})).join("\n")}toString(){let e=this.showSourceCode();return e&&(e="\n\n"+e+"\n"),this.name+": "+this.message+e}}module.exports=CssSyntaxError,CssSyntaxError.default=CssSyntaxError;