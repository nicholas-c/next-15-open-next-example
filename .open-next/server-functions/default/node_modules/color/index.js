const colorString=require("color-string"),convert=require("color-convert"),skippedModels=["keyword","gray","hex"],hashedModelKeys={};for(const t of Object.keys(convert))hashedModelKeys[[...convert[t].labels].sort().join("")]=t;const limiters={};function Color(t,o){if(!(this instanceof Color))return new Color(t,o);if(o&&o in skippedModels&&(o=null),o&&!(o in convert))throw new Error("Unknown model: "+o);let r,e;if(null==t)this.model="rgb",this.color=[0,0,0],this.valpha=1;else if(t instanceof Color)this.model=t.model,this.color=[...t.color],this.valpha=t.valpha;else if("string"==typeof t){const o=colorString.get(t);if(null===o)throw new Error("Unable to parse color from string: "+t);this.model=o.model,e=convert[this.model].channels,this.color=o.value.slice(0,e),this.valpha="number"==typeof o.value[e]?o.value[e]:1}else if(t.length>0){this.model=o||"rgb",e=convert[this.model].channels;const r=Array.prototype.slice.call(t,0,e);this.color=zeroArray(r,e),this.valpha="number"==typeof t[e]?t[e]:1}else if("number"==typeof t)this.model="rgb",this.color=[t>>16&255,t>>8&255,255&t],this.valpha=1;else{this.valpha=1;const o=Object.keys(t);"alpha"in t&&(o.splice(o.indexOf("alpha"),1),this.valpha="number"==typeof t.alpha?t.alpha:0);const e=o.sort().join("");if(!(e in hashedModelKeys))throw new Error("Unable to parse color from object: "+JSON.stringify(t));this.model=hashedModelKeys[e];const{labels:n}=convert[this.model],s=[];for(r=0;r<n.length;r++)s.push(t[n[r]]);this.color=zeroArray(s)}if(limiters[this.model])for(e=convert[this.model].channels,r=0;r<e;r++){const t=limiters[this.model][r];t&&(this.color[r]=t(this.color[r]))}this.valpha=Math.max(0,Math.min(1,this.valpha)),Object.freeze&&Object.freeze(this)}Color.prototype={toString(){return this.string()},toJSON(){return this[this.model]()},string(t){let o=this.model in colorString.to?this:this.rgb();o=o.round("number"==typeof t?t:1);const r=1===o.valpha?o.color:[...o.color,this.valpha];return colorString.to[o.model](r)},percentString(t){const o=this.rgb().round("number"==typeof t?t:1),r=1===o.valpha?o.color:[...o.color,this.valpha];return colorString.to.rgb.percent(r)},array(){return 1===this.valpha?[...this.color]:[...this.color,this.valpha]},object(){const t={},{channels:o}=convert[this.model],{labels:r}=convert[this.model];for(let e=0;e<o;e++)t[r[e]]=this.color[e];return 1!==this.valpha&&(t.alpha=this.valpha),t},unitArray(){const t=this.rgb().color;return t[0]/=255,t[1]/=255,t[2]/=255,1!==this.valpha&&t.push(this.valpha),t},unitObject(){const t=this.rgb().object();return t.r/=255,t.g/=255,t.b/=255,1!==this.valpha&&(t.alpha=this.valpha),t},round(t){return t=Math.max(t||0,0),new Color([...this.color.map(roundToPlace(t)),this.valpha],this.model)},alpha(t){return void 0!==t?new Color([...this.color,Math.max(0,Math.min(1,t))],this.model):this.valpha},red:getset("rgb",0,maxfn(255)),green:getset("rgb",1,maxfn(255)),blue:getset("rgb",2,maxfn(255)),hue:getset(["hsl","hsv","hsl","hwb","hcg"],0,(t=>(t%360+360)%360)),saturationl:getset("hsl",1,maxfn(100)),lightness:getset("hsl",2,maxfn(100)),saturationv:getset("hsv",1,maxfn(100)),value:getset("hsv",2,maxfn(100)),chroma:getset("hcg",1,maxfn(100)),gray:getset("hcg",2,maxfn(100)),white:getset("hwb",1,maxfn(100)),wblack:getset("hwb",2,maxfn(100)),cyan:getset("cmyk",0,maxfn(100)),magenta:getset("cmyk",1,maxfn(100)),yellow:getset("cmyk",2,maxfn(100)),black:getset("cmyk",3,maxfn(100)),x:getset("xyz",0,maxfn(95.047)),y:getset("xyz",1,maxfn(100)),z:getset("xyz",2,maxfn(108.833)),l:getset("lab",0,maxfn(100)),a:getset("lab",1),b:getset("lab",2),keyword(t){return void 0!==t?new Color(t):convert[this.model].keyword(this.color)},hex(t){return void 0!==t?new Color(t):colorString.to.hex(this.rgb().round().color)},hexa(t){if(void 0!==t)return new Color(t);const o=this.rgb().round().color;let r=Math.round(255*this.valpha).toString(16).toUpperCase();return 1===r.length&&(r="0"+r),colorString.to.hex(o)+r},rgbNumber(){const t=this.rgb().color;return(255&t[0])<<16|(255&t[1])<<8|255&t[2]},luminosity(){const t=this.rgb().color,o=[];for(const[r,e]of t.entries()){const t=e/255;o[r]=t<=.04045?t/12.92:((t+.055)/1.055)**2.4}return.2126*o[0]+.7152*o[1]+.0722*o[2]},contrast(t){const o=this.luminosity(),r=t.luminosity();return o>r?(o+.05)/(r+.05):(r+.05)/(o+.05)},level(t){const o=this.contrast(t);return o>=7?"AAA":o>=4.5?"AA":""},isDark(){const t=this.rgb().color;return(2126*t[0]+7152*t[1]+722*t[2])/1e4<128},isLight(){return!this.isDark()},negate(){const t=this.rgb();for(let o=0;o<3;o++)t.color[o]=255-t.color[o];return t},lighten(t){const o=this.hsl();return o.color[2]+=o.color[2]*t,o},darken(t){const o=this.hsl();return o.color[2]-=o.color[2]*t,o},saturate(t){const o=this.hsl();return o.color[1]+=o.color[1]*t,o},desaturate(t){const o=this.hsl();return o.color[1]-=o.color[1]*t,o},whiten(t){const o=this.hwb();return o.color[1]+=o.color[1]*t,o},blacken(t){const o=this.hwb();return o.color[2]+=o.color[2]*t,o},grayscale(){const t=this.rgb().color,o=.3*t[0]+.59*t[1]+.11*t[2];return Color.rgb(o,o,o)},fade(t){return this.alpha(this.valpha-this.valpha*t)},opaquer(t){return this.alpha(this.valpha+this.valpha*t)},rotate(t){const o=this.hsl();let r=o.color[0];return r=(r+t)%360,r=r<0?360+r:r,o.color[0]=r,o},mix(t,o){if(!t||!t.rgb)throw new Error('Argument to "mix" was not a Color instance, but rather an instance of '+typeof t);const r=t.rgb(),e=this.rgb(),n=void 0===o?.5:o,s=2*n-1,l=r.alpha()-e.alpha(),h=((s*l==-1?s:(s+l)/(1+s*l))+1)/2,i=1-h;return Color.rgb(h*r.red()+i*e.red(),h*r.green()+i*e.green(),h*r.blue()+i*e.blue(),r.alpha()*n+e.alpha()*(1-n))}};for(const t of Object.keys(convert)){if(skippedModels.includes(t))continue;const{channels:o}=convert[t];Color.prototype[t]=function(...o){return this.model===t?new Color(this):o.length>0?new Color(o,t):new Color([...assertArray(convert[this.model][t].raw(this.color)),this.valpha],t)},Color[t]=function(...r){let e=r[0];return"number"==typeof e&&(e=zeroArray(r,o)),new Color(e,t)}}function roundTo(t,o){return Number(t.toFixed(o))}function roundToPlace(t){return function(o){return roundTo(o,t)}}function getset(t,o,r){t=Array.isArray(t)?t:[t];for(const e of t)(limiters[e]||(limiters[e]=[]))[o]=r;return t=t[0],function(e){let n;return void 0!==e?(r&&(e=r(e)),n=this[t](),n.color[o]=e,n):(n=this[t]().color[o],r&&(n=r(n)),n)}}function maxfn(t){return function(o){return Math.max(0,Math.min(t,o))}}function assertArray(t){return Array.isArray(t)?t:[t]}function zeroArray(t,o){for(let r=0;r<o;r++)"number"!=typeof t[r]&&(t[r]=0);return t}module.exports=Color;